
name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      apply_fixes:
        description: 'Apply fixes after deployment'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: |
          npm install
          npm install css-minimizer-webpack-plugin terser-webpack-plugin mini-css-extract-plugin html-webpack-plugin webpack-merge css-loader style-loader
          # Check if EVAPOTRAN/server directory exists before trying to cd into it
          if [ -d "EVAPOTRAN/server" ]; then
            cd EVAPOTRAN/server
            npm install
            cd ../..
          fi
          
      - name: Run linting and tests
        run: |
          npm run lint || echo "Linting issues found"
          npm test || echo "Tests not configured"
          
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: |
          npm install
          npm install css-minimizer-webpack-plugin terser-webpack-plugin mini-css-extract-plugin html-webpack-plugin webpack-merge css-loader style-loader
          # Check if EVAPOTRAN/server directory exists before trying to cd into it
          if [ -d "EVAPOTRAN/server" ]; then
            cd EVAPOTRAN/server
            npm install
            cd ../..
          fi
          
      - name: Build application
        run: npm run build
        
      - name: Run pre-deployment checks
        run: bash scripts/deploy/pre-deploy-check.sh || echo "Pre-deployment checks skipped"
        
      - name: Get changed files
        id: changed-files
        run: |
          echo "CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD | tr '\n' ' ')" >> $GITHUB_ENV
          echo "Changed files: $(git diff --name-only HEAD~1 HEAD | tr '\n' ' ')"
        
      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@master
        with:
          host: 207.154.202.6
          username: root
          key: ${{ secrets.DROPLET_SSH_KEY }}
          port: 22
          script: |
            # Pull latest changes
            cd /var/www/flahacalc
            git pull origin main
            
            # Install dependencies
            npm install
            npm install css-minimizer-webpack-plugin terser-webpack-plugin mini-css-extract-plugin html-webpack-plugin webpack-merge css-loader style-loader
            
            # Check if EVAPOTRAN/server directory exists before trying to cd into it
            if [ -d "EVAPOTRAN/server" ]; then
              cd EVAPOTRAN/server
              npm install
              cd ../..
            fi
            
            # Build application if needed
            npm run build
            
            # Make all scripts executable
            find scripts -name "*.sh" -exec chmod +x {} \;
            
            # Update Nginx configuration
            echo "Updating Nginx configuration..."
            cp scripts/server/nginx/flahacalc.conf /etc/nginx/sites-available/flahacalc
            ln -sf /etc/nginx/sites-available/flahacalc /etc/nginx/sites-enabled/
            nginx -t && systemctl reload nginx
            
            # Restart server if EVAPOTRAN/server exists
            if [ -d "EVAPOTRAN/server" ]; then
              cd EVAPOTRAN/server
              pm2 restart flahacalc-server || pm2 start server.js --name flahacalc-server
              pm2 save
              cd ../..
            fi
            
            # Update HTML links for production
            bash scripts/deploy/update-links.sh || echo "Update links script not found or failed"
      
      - name: Verify deployment
        uses: appleboy/ssh-action@master
        with:
          host: 207.154.202.6
          username: root
          key: ${{ secrets.DROPLET_SSH_KEY }}
          port: 22
          script: |
            cd /var/www/flahacalc
            
            # Check if EVAPOTRAN/server exists before trying to verify API endpoint
            if [ -d "EVAPOTRAN/server" ]; then
              echo "Verifying API endpoint..."
              curl -s http://localhost:3000/test || echo "API endpoint test failed"
              echo ""
              echo "Checking Node.js server status..."
              pm2 status flahacalc-server || echo "PM2 status check failed"
            else
              echo "EVAPOTRAN/server directory not found, skipping API verification"
            fi
            
            echo ""
            echo "Checking Nginx status..."
            systemctl status nginx | grep Active || echo "Nginx status check failed"
            
      - name: Apply fixes if requested
        if: github.event.inputs.apply_fixes == 'true'
        uses: appleboy/ssh-action@master
        with:
          host: 207.154.202.6
          username: root
          key: ${{ secrets.DROPLET_SSH_KEY }}
          port: 22
          script: |
            cd /var/www/flahacalc
            bash scripts/server/fix-all.sh || echo "Fix-all script failed or not found"
            
  notify:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Send deployment notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: deployments
          SLACK_COLOR: ${{ job.status }}
          SLACK_TITLE: Deployment Complete
          SLACK_MESSAGE: 'FlahaCalc has been deployed to production. Commit message: ${{ github.event.head_commit.message }}'
          SLACK_FOOTER: 'Deployed by: ${{ github.actor }}'
        if: env.SLACK_WEBHOOK != ''
