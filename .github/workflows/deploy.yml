name: Deploy to DigitalOcean

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: |
          npm install
          cd EVAPOTRAN/server
          npm install
          
      - name: Build application
        run: npm run build
        
      - name: Ensure assets exist
        run: |
          mkdir -p public/img
          # Create logo if it doesn't exist
          if [ ! -f "public/img/Flaha_logo.svg" ]; then
            cat > public/img/Flaha_logo.svg << 'EOF'
          <svg xmlns="http://www.w3.org/2000/svg" width="200" height="60" viewBox="0 0 200 60">
            <text x="10" y="40" font-family="Arial" font-size="30" font-weight="bold" fill="#3a7e3a">FLAHA</text>
          </svg>
          EOF
          fi
          # Create agriculture illustration if it doesn't exist
          if [ ! -f "public/img/agriculture-illustration.svg" ]; then
            cat > public/img/agriculture-illustration.svg << 'EOF'
          <svg xmlns="http://www.w3.org/2000/svg" width="300" height="200" viewBox="0 0 300 200">
            <rect x="50" y="150" width="200" height="20" fill="#8B4513"/>
            <path d="M150,50 L120,150 L180,150 Z" fill="#3a7e3a"/>
            <path d="M100,80 L80,150 L120,150 Z" fill="#3a7e3a"/>
            <path d="M200,80 L180,150 L220,150 Z" fill="#3a7e3a"/>
          </svg>
          EOF
          fi
        
      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@master
        with:
          host: 207.154.202.6
          username: root
          key: ${{ secrets.DROPLET_SSH_KEY }}
          port: 22
          script: |
            # Create application directory if it doesn't exist
            mkdir -p /var/www/flahacalc/public
            mkdir -p /var/www/flahacalc/EVAPOTRAN/server
            
            # Install dependencies
            cd /var/www/flahacalc/EVAPOTRAN/server
            npm install dotenv express cors axios
            
            # Make all scripts executable
            cd /var/www/flahacalc
            find scripts -name "*.sh" -exec chmod +x {} \; 2>/dev/null || true
            
            # Update Nginx configuration
            cp /etc/nginx/sites-available/flahacalc /etc/nginx/sites-available/flahacalc.bak.$(date +%Y%m%d%H%M%S)
            cp scripts/server/nginx/flahacalc.conf /etc/nginx/sites-available/flahacalc
            nginx -t && systemctl reload nginx
            
            # Restart server
            cd /var/www/flahacalc/EVAPOTRAN/server
            pm2 restart flahacalc-server || pm2 start server.js --name flahacalc-server
            pm2 save
            
            echo "Deployment completed successfully!"
      
      - name: Deploy files via rsync
        uses: burnett01/rsync-deployments@5.2.1
        with:
          switches: -avz --delete
          path: ./public/
          remote_path: /var/www/flahacalc/public/
          remote_host: 207.154.202.6
          remote_user: root
          remote_key: ${{ secrets.DROPLET_SSH_KEY }}
          
      - name: Deploy server files via rsync
        uses: burnett01/rsync-deployments@5.2.1
        with:
          switches: -avz
          path: ./EVAPOTRAN/server/
          remote_path: /var/www/flahacalc/EVAPOTRAN/server/
          remote_host: 207.154.202.6
          remote_user: root
          remote_key: ${{ secrets.DROPLET_SSH_KEY }}
          
      - name: Verify deployment
        uses: appleboy/ssh-action@master
        with:
          host: 207.154.202.6
          username: root
          key: ${{ secrets.DROPLET_SSH_KEY }}
          port: 22
          script: |
            # Verify Nginx configuration
            echo "Verifying Nginx configuration..."
            if grep -q "proxy_pass http://localhost:3000/api/" /etc/nginx/sites-available/flahacalc; then
              echo "‚úÖ API routing configured correctly"
            else
              echo "‚ùå API routing not configured correctly"
              exit 1
            fi
            
            # Verify server is running
            echo "Verifying server is running..."
            if pm2 list | grep -q "flahacalc-server"; then
              echo "‚úÖ Server is running"
            else
              echo "‚ùå Server is not running"
              exit 1
            fi
            
            # Test API endpoint
            echo "Testing API endpoint..."
            if curl -s http://localhost:3000/api/test | grep -q "status"; then
              echo "‚úÖ API endpoint is working"
            else
              echo "‚ùå API endpoint is not working"
              exit 1
            fi
            
            echo "Verification completed successfully!"
      
      - name: Notify on success
        if: success()
        run: |
          echo "Deployment completed successfully!"
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"‚úÖ *DEPLOYMENT SUCCESSFUL* ‚úÖ\n*Repository:* ${{ github.repository }}\n*Branch:* ${{ github.ref_name }}\n*Commit:* ${{ github.sha }}\n*Deployed by:* ${{ github.actor }}\n*Time:* $(date)"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}
      
      - name: Notify on failure
        if: failure()
        run: |
          echo "Deployment failed!"
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"üö® *DEPLOYMENT FAILED* üö®\n*Repository:* ${{ github.repository }}\n*Branch:* ${{ github.ref_name }}\n*Commit:* ${{ github.sha }}\n*Deployed by:* ${{ github.actor }}\n*Time:* $(date)"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}
