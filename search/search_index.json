{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"Flaha Agri Tech - EVAPOTRAN <p>Professional Evapotranspiration Calculator for Agricultural Applications</p>"},{"location":"#evapotran-documentation","title":"EVAPOTRAN Documentation","text":"<p>Welcome to the official documentation for EVAPOTRAN, a professional evapotranspiration calculator for agricultural applications developed by Flaha Agri Tech.</p>"},{"location":"#about-evapotran","title":"About EVAPOTRAN","text":"<p>EVAPOTRAN is a comprehensive calculator designed for professionals in horticulture, agronomy, landscaping, and agricultural engineering. This web application provides essential tools for precise calculations of evapotranspiration using the FAO Penman-Monteith method, supporting irrigation management and water resource planning.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Manual Calculator: Enter climate data directly to calculate reference evapotranspiration</li> <li>EPW Import: Upload EnergyPlus Weather files to extract climate data</li> <li>Weather Visualization: Generate heatmaps and visualize weather patterns</li> <li>Live Weather: Connect to real-time weather data for immediate calculations</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<p>New to EVAPOTRAN? Start here:</p> <ul> <li>Introduction - Learn what EVAPOTRAN is and why it's useful</li> <li>Installation - Set up EVAPOTRAN on your system</li> <li>Quick Start Guide - Make your first calculations</li> </ul>"},{"location":"#documentation-formats","title":"Documentation Formats","text":"<p>This documentation is available in multiple formats:</p> <ul> <li>Web: Browse online at https://evapotran-doc.flaha.org</li> <li>GitHub Wiki: View on GitHub Wiki</li> <li>PDF: Download complete documentation as PDF</li> <li>GitHub: View source files in our GitHub repository</li> </ul>"},{"location":"#support","title":"Support","text":"<p>Need help? Check these resources:</p> <ul> <li>Frequently Asked Questions</li> <li>Troubleshooting Guide</li> <li>Contact Support</li> </ul>"},{"location":"#license","title":"License","text":"<p>EVAPOTRAN is licensed under the GNU General Public License v3.0. See the License page for details.</p>"},{"location":"#the-science-behind-evapotran","title":"The Science Behind EVAPOTRAN","text":"<p>EVAPOTRAN implements the FAO Penman-Monteith equation for calculating reference evapotranspiration (ET\u2080):</p> \\[ET_0 = \\frac{0.408 \\Delta (R_n - G) + \\gamma \\frac{900}{T + 273} u_2 (e_s - e_a)}{\\Delta + \\gamma (1 + 0.34 u_2)}\\] <p>Where: - \\(ET_0\\) = reference evapotranspiration [mm day\u207b\u00b9] - \\(R_n\\) = net radiation at the crop surface [MJ m\u207b\u00b2 day\u207b\u00b9] - \\(G\\) = soil heat flux density [MJ m\u207b\u00b2 day\u207b\u00b9] - \\(T\\) = mean daily air temperature at 2 m height [\u00b0C] - \\(u_2\\) = wind speed at 2 m height [m s\u207b\u00b9] - \\(e_s\\) = saturation vapor pressure [kPa] - \\(e_a\\) = actual vapor pressure [kPa] - \\(\\Delta\\) = slope of vapor pressure curve [kPa \u00b0C\u207b\u00b9] - \\(\\gamma\\) = psychrometric constant [kPa \u00b0C\u207b\u00b9]</p> <p>This internationally recognized method provides a standardized approach to estimating evapotranspiration, enabling accurate water management decisions across different climates and regions.</p>"},{"location":"deployment/","title":"Deployment Guide","text":""},{"location":"deployment/#server-configuration","title":"Server Configuration","text":"<p>The application is deployed on a DigitalOcean droplet with the following configuration:</p> <ul> <li>Server: Ubuntu 20.04</li> <li>Web Server: Nginx</li> <li>Node.js: v16.x</li> <li>Process Manager: PM2</li> </ul>"},{"location":"deployment/#url-structure","title":"URL Structure","text":"<ul> <li>Main site: <code>https://flaha.org/</code></li> <li>PA division: <code>https://flaha.org/pa/</code></li> <li>EVAPOTRAN application: <code>https://flaha.org/pa/evapotran/</code></li> </ul>"},{"location":"deployment/#directory-structure","title":"Directory Structure","text":"<ul> <li><code>/var/www/flahacalc/</code> - Main application directory</li> <li><code>/EVAPOTRAN/</code> - EVAPOTRAN application (served at <code>/pa/evapotran/</code>)</li> <li><code>/pa/</code> - PA division</li> </ul>"},{"location":"deployment/#deployment-process","title":"Deployment Process","text":"<p>The application is automatically deployed using GitHub Actions when changes are pushed to the main branch.</p>"},{"location":"deployment/#manual-deployment","title":"Manual Deployment","text":"<p>If you need to deploy manually:</p> <ol> <li> <p>SSH into the server:    <pre><code>ssh root@207.154.202.6\n</code></pre></p> </li> <li> <p>Navigate to the application directory:    <pre><code>cd /var/www/flahacalc\n</code></pre></p> </li> <li> <p>Pull the latest changes:    <pre><code>git pull origin main\n</code></pre></p> </li> <li> <p>Run the post-deployment script:    <pre><code>bash scripts/server/post-deploy.sh\n</code></pre></p> </li> </ol>"},{"location":"deployment/#troubleshooting","title":"Troubleshooting","text":""},{"location":"deployment/#api-not-working","title":"API Not Working","text":"<ol> <li> <p>Check if the Node.js server is running:    <pre><code>pm2 status\n</code></pre></p> </li> <li> <p>Restart the server if needed:    <pre><code>pm2 restart flahacalc-server\n</code></pre></p> </li> <li> <p>Check server logs:    <pre><code>pm2 logs flahacalc-server\n</code></pre></p> </li> </ol>"},{"location":"deployment/#nginx-issues","title":"Nginx Issues","text":"<ol> <li> <p>Test Nginx configuration:    <pre><code>nginx -t\n</code></pre></p> </li> <li> <p>Check Nginx logs:    <pre><code>tail -f /var/log/nginx/error.log\n</code></pre></p> </li> <li> <p>Restart Nginx:    <pre><code>systemctl restart nginx\n</code></pre></p> </li> </ol>"},{"location":"privacy/","title":"Privacy Policy","text":""},{"location":"privacy/#analytics","title":"Analytics","text":"<p>This documentation website uses Google Analytics to collect anonymous usage data. This helps us understand how visitors use our documentation so we can improve it.</p> <p>The following information may be collected: - Pages visited - Time spent on pages - Browser and device information - Approximate geographic location (country level)</p> <p>No personally identifiable information is collected. All data is processed in accordance with Google's privacy policy.</p>"},{"location":"privacy/#cookies","title":"Cookies","text":"<p>Google Analytics uses cookies to identify unique visitors and sessions. These cookies do not contain any personal information.</p>"},{"location":"privacy/#opting-out","title":"Opting Out","text":"<p>You can opt out of Google Analytics tracking by: - Using the Google Analytics Opt-out Browser Add-on - Enabling \"Do Not Track\" in your browser - Disabling JavaScript in your browser</p>"},{"location":"about/contact/","title":"Contact Information","text":""},{"location":"about/contact/#flaha-agri-tech","title":"Flaha Agri Tech","text":"<p>For questions, support, or feedback regarding EVAPOTRAN, please contact us:</p>"},{"location":"about/contact/#email","title":"Email","text":"<ul> <li>General Inquiries: info@flaha.org</li> <li>Technical Support: support@flaha.org</li> </ul>"},{"location":"about/contact/#social-media","title":"Social Media","text":"<ul> <li>Twitter: @FlahaAgriTech</li> <li>LinkedIn: Flaha Agri Tech</li> </ul>"},{"location":"about/contact/#website","title":"Website","text":"<p>Visit our website for more information about our products and services: https://flaha.org</p>"},{"location":"about/contact/#development-team","title":"Development Team","text":"<p>EVAPOTRAN was developed by:</p> <ul> <li>Rafat Al Khashan - Lead Developer</li> <li>Email: rafat@flaha.org</li> </ul>"},{"location":"about/contact/#reporting-issues","title":"Reporting Issues","text":"<p>If you encounter any issues with EVAPOTRAN, please report them on our GitHub repository: https://github.com/flaha-agritech/evapotran/issues</p>"},{"location":"about/contact/#contributing","title":"Contributing","text":"<p>We welcome contributions to EVAPOTRAN! Please see our Contributing Guidelines for more information.</p>"},{"location":"about/license/","title":"License","text":"<p>EVAPOTRAN is licensed under the MIT License.</p>"},{"location":"about/license/#mit-license","title":"MIT License","text":"<p>Copyright (c) 2023 Flaha Agri Tech</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"api/","title":"API Documentation","text":"<p>This section documents the JavaScript API for EVAPOTRAN, useful for developers who want to integrate with or extend the application.</p>"},{"location":"api/#contents","title":"Contents","text":"<ol> <li>Core API - Core calculation functions</li> <li>Weather Data API - Weather data handling functions</li> <li>Visualization API - Data visualization functions</li> <li>Utility Functions - Helper functions</li> <li>Events - Event system documentation</li> <li>Integration Examples - Examples of API usage</li> </ol>"},{"location":"api/overview/","title":"API Documentation Overview","text":"<p>This section provides detailed documentation for developers who want to use or extend EVAPOTRAN's functionality.</p>"},{"location":"api/overview/#api-structure","title":"API Structure","text":"<p>EVAPOTRAN's JavaScript API is organized into several modules:</p> <ul> <li>Core Calculation Engine: Functions for implementing the FAO Penman-Monteith equation</li> <li>Data Handling: Utilities for processing and managing weather data</li> <li>Visualization: Components for creating charts, graphs, and heatmaps</li> <li>Weather Integration: Services for connecting to weather data providers</li> </ul>"},{"location":"api/overview/#getting-started-with-the-api","title":"Getting Started with the API","text":"<p>To use EVAPOTRAN's API in your own projects, you'll need to:</p> <ol> <li>Include the necessary JavaScript files</li> <li>Initialize the required modules</li> <li>Call the appropriate functions with your data</li> </ol> <p>See the following sections for detailed documentation on each part of the API.</p>"},{"location":"case-studies/","title":"Case Studies","text":"<p>This section presents real-world applications of EVAPOTRAN in various agricultural and water management scenarios. These case studies demonstrate how the tool can be used to solve practical problems and improve decision-making.</p>"},{"location":"case-studies/#available-case-studies","title":"Available Case Studies","text":"<ol> <li>Vineyard Irrigation Optimization</li> <li>Greenhouse Water Management</li> <li>Urban Landscape Planning</li> <li>Drought Response Planning</li> <li>Seasonal Crop Water Requirements</li> </ol> <p>Each case study includes:</p> <ul> <li>Background information</li> <li>Problem statement</li> <li>Data collection methodology</li> <li>Analysis using EVAPOTRAN</li> <li>Results and outcomes</li> <li>Lessons learned</li> </ul>"},{"location":"case-studies/#how-to-use-these-case-studies","title":"How to Use These Case Studies","text":"<p>These case studies can serve as:</p> <ol> <li>Learning tools to understand how evapotranspiration calculations apply to real situations</li> <li>Templates for your own analysis</li> <li>Validation of the EVAPOTRAN methodology</li> <li>Inspiration for new applications</li> </ol>"},{"location":"case-studies/#contributing-a-case-study","title":"Contributing a Case Study","text":"<p>We welcome contributions of new case studies from users. If you have used EVAPOTRAN in your work and would like to share your experience, please see our contribution guidelines for information on how to submit your case study.</p>"},{"location":"case-studies/drought-response/","title":"Case Study: Drought Response Planning","text":""},{"location":"case-studies/drought-response/#overview","title":"Overview","text":"<p>This case study examines how the Central Valley Water District used EVAPOTRAN to develop and implement a comprehensive drought response plan during a severe multi-year drought.</p>"},{"location":"case-studies/drought-response/#client-profile","title":"Client Profile","text":"<p>Organization: Central Valley Water District (CVWD) Location: Central Valley, California, USA Service Area: 850,000 acres of agricultural land and 12 municipalities Water Sources: Surface water (65%), groundwater (35%) Previous Approach: Historical allocation based on water rights seniority</p>"},{"location":"case-studies/drought-response/#challenges","title":"Challenges","text":"<ol> <li>Limited Water Supply: Reservoir levels at 28% of capacity and declining groundwater tables</li> <li>Competing Demands: Agricultural, municipal, and environmental water needs in conflict</li> <li>Economic Concerns: Potential for significant crop losses and economic damage</li> <li>Equity Issues: Need for fair distribution of limited water resources</li> <li>Long-term Planning: Uncertainty about drought duration and future water availability</li> </ol>"},{"location":"case-studies/drought-response/#implementation","title":"Implementation","text":"<ol> <li>Regional ET\u2080 Mapping: Created high-resolution evapotranspiration maps across the district</li> <li>Crop Water Need Assessment: Calculated water requirements for different crops and growth stages</li> <li>Allocation Modeling: Developed water allocation scenarios based on ET\u2080 data</li> <li>Real-time Monitoring: Established continuous monitoring of climate conditions and water use</li> <li>Public Information System: Created dashboards for water users to track allocations and usage</li> </ol>"},{"location":"case-studies/drought-response/#results","title":"Results","text":"<p>After implementation:</p> <ol> <li>Water Conservation: 24% reduction in total water use across the district</li> <li>Economic Protection: Preserved 87% of agricultural production value despite 35% less water</li> <li>Equitable Distribution: Transparent, needs-based water allocation accepted by stakeholders</li> <li>Compliance: Met all state-mandated water reduction targets</li> <li>Improved Planning: Better long-term forecasting of water needs and availability</li> </ol>"},{"location":"case-studies/drought-response/#key-insights","title":"Key Insights","text":"<ol> <li>Spatial Variability: Significant ET\u2080 differences across the district influenced allocation efficiency</li> <li>Crop Selection Impact: Data-driven decisions about which crops to prioritize minimized economic losses</li> <li>Timing Sensitivity: Precise timing of limited irrigation based on growth stages maximized efficiency</li> <li>Communication Importance: Transparent data sharing reduced conflicts between water users</li> <li>Adaptive Management: Regular recalculation of ET\u2080 allowed for adjustments as conditions changed</li> </ol>"},{"location":"case-studies/drought-response/#conclusion","title":"Conclusion","text":"<p>The Central Valley Water District's implementation of EVAPOTRAN for drought response demonstrates how scientific evapotranspiration data can transform water management during scarcity, achieving more equitable and economically efficient distribution of limited resources.</p>"},{"location":"case-studies/greenhouse-management/","title":"Case Study: Greenhouse Management","text":""},{"location":"case-studies/greenhouse-management/#overview","title":"Overview","text":"<p>This case study examines how EVAPOTRAN optimized irrigation and climate control in a commercial greenhouse operation in Valencia, Spain.</p>"},{"location":"case-studies/greenhouse-management/#client-profile","title":"Client Profile","text":"<p>Organization: GreenHarvest Farms Location: Valencia, Spain Operation Size: 2.5 hectares of greenhouse space Crops: Tomatoes, cucumbers, and bell peppers Previous System: Timer-based irrigation with manual adjustments</p>"},{"location":"case-studies/greenhouse-management/#challenges","title":"Challenges","text":"<ol> <li>Inconsistent Irrigation: Timer-based irrigation didn't account for changing weather</li> <li>High Water Usage: Excessive water application during cooler periods</li> <li>Climate Control Inefficiency: HVAC systems running unnecessarily</li> <li>Crop Stress: Plants showing signs of water stress despite regular irrigation</li> <li>Energy Costs: High energy consumption for climate control</li> </ol>"},{"location":"case-studies/greenhouse-management/#implementation","title":"Implementation","text":"<ol> <li>Weather Station Integration: Connected local weather station data</li> <li>Daily ET\u2080 Calculations: Automated daily calculation of reference evapotranspiration</li> <li>Crop Coefficient Application: Applied specific crop coefficients</li> <li>Irrigation System Connection: Linked EVAPOTRAN outputs to automated irrigation controllers</li> <li>Climate Control Integration: Used ET\u2080 data to inform HVAC system operation</li> </ol>"},{"location":"case-studies/greenhouse-management/#results","title":"Results","text":"<p>After six months:</p> <ol> <li>Water Savings: 27% reduction in total water usage</li> <li>Energy Efficiency: 18% reduction in climate control energy consumption</li> <li>Crop Yield: 12% increase in tomato yield, 9% increase in cucumber yield</li> <li>Quality Improvement: Reduced incidence of blossom end rot by 65%</li> <li>Labor Efficiency: 15 hours per week saved in manual system adjustments</li> </ol>"},{"location":"case-studies/greenhouse-management/#key-insights","title":"Key Insights","text":"<ol> <li>Microclimate Variations: Significant ET\u2080 variations within different greenhouse zones</li> <li>Temporal Patterns: Clear patterns in daily ET\u2080 that could be anticipated</li> <li>Crop-Specific Responses: Different crops showed varying sensitivity to ET\u2080-based irrigation</li> <li>Seasonal Adjustments: Crop coefficients needed seasonal adjustment for optimal results</li> </ol>"},{"location":"case-studies/greenhouse-management/#conclusion","title":"Conclusion","text":"<p>The implementation of EVAPOTRAN at GreenHarvest Farms demonstrates how precision evapotranspiration calculation can significantly improve greenhouse operations, leading to water and energy savings while improving crop yield and quality. The case study highlights the importance of:</p> <ol> <li>Data-Driven Irrigation: Moving beyond timer-based systems to weather-responsive irrigation</li> <li>Integration Capabilities: Connecting evapotranspiration data with control systems</li> <li>Visualization Tools: Using visual data representation to identify patterns and anomalies</li> <li>Crop-Specific Approach: Tailoring water management to specific crop needs</li> </ol> <p>For greenhouse operations looking to optimize resource use and improve crop outcomes, EVAPOTRAN provides a scientific foundation for precision irrigation management.</p>"},{"location":"case-studies/urban-landscape/","title":"Case Study: Urban Landscape Management","text":""},{"location":"case-studies/urban-landscape/#overview","title":"Overview","text":"<p>This case study examines how the Parks Department of Westlake City used EVAPOTRAN to optimize irrigation in urban parks and landscaped areas, resulting in significant water conservation and improved landscape health.</p>"},{"location":"case-studies/urban-landscape/#client-profile","title":"Client Profile","text":"<p>Organization: Westlake City Parks Department Location: Westlake City, California, USA Managed Area: 450 acres of parks, medians, and public landscapes Landscape Types: Mixed turf, native plantings, ornamental gardens, and street trees Previous System: Zone-based irrigation with seasonal scheduling</p>"},{"location":"case-studies/urban-landscape/#challenges","title":"Challenges","text":"<p>The Parks Department faced several challenges in managing urban landscapes:</p> <ol> <li>Water Restrictions: Severe drought conditions led to municipal water restrictions</li> <li>Budget Constraints: Limited budget for irrigation system upgrades</li> <li>Diverse Landscape Needs: Different plant types requiring varied irrigation approaches</li> <li>Public Scrutiny: Visible brown spots in parks leading to public complaints</li> <li>Staff Limitations: Small maintenance team managing large areas</li> </ol>"},{"location":"case-studies/urban-landscape/#implementation","title":"Implementation","text":"<p>The Parks Department implemented EVAPOTRAN as part of a water conservation initiative:</p> <ol> <li>Weather Station Network: Installed five weather stations across the city</li> <li>Landscape Zoning: Categorized landscape areas by plant type and microclimate</li> <li>ET\u2080 Integration: Connected EVAPOTRAN to the central irrigation control system</li> <li>Staff Training: Trained maintenance staff on ET\u2080-based irrigation principles</li> <li>Public Dashboard: Created a public-facing dashboard showing water conservation efforts</li> </ol>"},{"location":"case-studies/urban-landscape/#technical-setup","title":"Technical Setup","text":"<p>The technical implementation included:</p> <ol> <li>Data Collection:</li> <li>Weather stations measuring temperature, humidity, solar radiation, and wind speed</li> <li>Flow meters on main irrigation lines</li> <li> <p>Soil moisture sensors in representative landscape zones</p> </li> <li> <p>EVAPOTRAN Configuration:</p> </li> <li>Daily ET\u2080 calculations for each weather station zone</li> <li>Plant factor adjustments for different landscape types</li> <li> <p>Irrigation efficiency factors for different system types</p> </li> <li> <p>Integration Points:</p> </li> <li>Direct API connection to Rainbird central control system</li> <li>Mobile app for maintenance staff</li> <li>Public website with water usage visualization</li> </ol>"},{"location":"case-studies/urban-landscape/#results","title":"Results","text":"<p>After one year of implementation, the Parks Department achieved:</p> <ol> <li>Water Reduction: 32% decrease in total landscape water use</li> <li>Cost Savings: $245,000 annual reduction in water bills</li> <li>Landscape Quality: Improved plant health despite using less water</li> <li>Compliance: Met all municipal water restriction requirements</li> <li>Public Perception: Positive feedback on landscape appearance and conservation efforts</li> </ol>"},{"location":"case-studies/urban-landscape/#key-insights","title":"Key Insights","text":"<p>The implementation revealed several important insights:</p> <ol> <li>Microclimate Impact: Significant ET\u2080 variations across the city due to urban heat island effects</li> <li>System Efficiency: Irrigation system efficiency varied widely across different parks</li> <li>Plant Adaptation: Native plants adjusted quickly to precision irrigation scheduling</li> <li>Soil Variations: Different soil types required adjustments to irrigation run times</li> <li>Public Education: Visualization tools helped educate the public about water conservation</li> </ol>"},{"location":"case-studies/urban-landscape/#visualization-impact","title":"Visualization Impact","text":"<p>The visualization tools in EVAPOTRAN played a crucial role in the success of this project:</p> <ol> <li>ET\u2080 Heatmaps: Spatial visualization of evapotranspiration rates across the city helped identify microclimates and prioritize irrigation zones</li> <li>Water Usage Dashboards: Real-time and historical water usage displays helped staff monitor conservation progress</li> <li>Comparison Tools: Side-by-side comparison of different irrigation strategies helped optimize scheduling</li> <li>Public Portal: Simplified visualizations for public education increased community support</li> </ol> <p></p>"},{"location":"case-studies/urban-landscape/#implementation-challenges","title":"Implementation Challenges","text":"<p>Several challenges were encountered during implementation:</p> <ol> <li>Weather Station Placement: Finding optimal locations for weather stations in urban environments</li> <li>Staff Adoption: Overcoming resistance to new technology among maintenance staff</li> <li>System Integration: Connecting with legacy irrigation controllers required custom interfaces</li> <li>Data Management: Handling the volume of data from multiple weather stations</li> <li>Calibration: Adjusting crop coefficients for ornamental and mixed plantings</li> </ol>"},{"location":"case-studies/urban-landscape/#long-term-maintenance","title":"Long-term Maintenance","text":"<p>To ensure continued success, the Parks Department established:</p> <ol> <li>Regular Calibration: Quarterly review and adjustment of weather sensors</li> <li>Staff Training Program: Ongoing training for new and existing staff</li> <li>Data Backup Protocol: Automated backup of all historical weather and irrigation data</li> <li>Performance Monitoring: Monthly review of water usage and landscape health metrics</li> <li>Technology Updates: Annual review of system components and software updates</li> </ol>"},{"location":"case-studies/urban-landscape/#future-plans","title":"Future Plans","text":"<p>Based on the success of this implementation, the Parks Department is planning:</p> <ol> <li>Expanded Coverage: Adding more weather stations to cover additional parks</li> <li>Smart Irrigation Controllers: Upgrading to controllers with direct ET\u2080 integration</li> <li>Soil Moisture Integration: Adding more soil moisture sensors for feedback-based irrigation</li> <li>Predictive Modeling: Implementing forecasting to anticipate irrigation needs</li> <li>Regional Collaboration: Sharing data with neighboring municipalities</li> </ol>"},{"location":"case-studies/urban-landscape/#conclusion","title":"Conclusion","text":"<p>The Westlake City Parks Department's implementation of EVAPOTRAN demonstrates how science-based irrigation management can significantly improve urban landscape sustainability. By basing irrigation decisions on actual evapotranspiration data rather than fixed schedules, the department achieved substantial water savings while maintaining or improving landscape quality.</p> <p>This case study highlights the importance of:</p> <ol> <li>Microclimate Awareness: Recognizing and accounting for local climate variations</li> <li>Data-Driven Decision Making: Using actual ET\u2080 measurements rather than estimates</li> <li>Staff Engagement: Ensuring maintenance personnel understand and support the system</li> <li>Public Communication: Sharing conservation efforts with the community</li> <li>Continuous Improvement: Regularly reviewing and optimizing the system</li> </ol> <p>For urban landscape managers facing water restrictions and budget constraints, EVAPOTRAN offers a proven solution for balancing conservation goals with aesthetic requirements.</p>"},{"location":"case-studies/vineyard-irrigation/","title":"Case Study: Vineyard Irrigation Optimization","text":""},{"location":"case-studies/vineyard-irrigation/#background","title":"Background","text":"<p>Location: Napa Valley, California, USA Crop: Wine grapes (Vitis vinifera 'Cabernet Sauvignon') Area: 15 hectares Irrigation System: Drip irrigation Challenge: Optimize irrigation scheduling to improve water use efficiency while maintaining grape quality</p>"},{"location":"case-studies/vineyard-irrigation/#problem-statement","title":"Problem Statement","text":"<p>A vineyard manager needed to develop a precise irrigation schedule for a premium Cabernet Sauvignon vineyard. The goals were to:</p> <ol> <li>Reduce water usage by at least 15%</li> <li>Maintain or improve grape quality parameters</li> <li>Implement regulated deficit irrigation (RDI) at specific phenological stages</li> <li>Create a data-driven approach to replace the existing fixed schedule</li> </ol>"},{"location":"case-studies/vineyard-irrigation/#methodology","title":"Methodology","text":""},{"location":"case-studies/vineyard-irrigation/#data-collection","title":"Data Collection","text":"<ol> <li>Weather Data: </li> <li>Installed an on-site weather station collecting hourly data</li> <li>Parameters measured: temperature, relative humidity, wind speed, solar radiation</li> <li> <p>Data collected from April through October (growing season)</p> </li> <li> <p>Soil Moisture Monitoring:</p> </li> <li>Installed soil moisture sensors at three depths (30cm, 60cm, 90cm)</li> <li> <p>Sensors placed in three vineyard zones representing different soil types</p> </li> <li> <p>Plant Monitoring:</p> </li> <li>Weekly measurements of stem water potential using pressure chamber</li> <li>Canopy temperature measurements using infrared thermometer</li> <li>Visual assessment of vine stress indicators</li> </ol>"},{"location":"case-studies/vineyard-irrigation/#analysis-with-evapotran","title":"Analysis with EVAPOTRAN","text":"<ol> <li>Daily ET\u2080 Calculation:</li> <li>Weather data imported into EVAPOTRAN</li> <li> <p>Daily reference evapotranspiration (ET\u2080) calculated using FAO Penman-Monteith method</p> </li> <li> <p>Crop ET Calculation:</p> </li> <li>Crop coefficients (Kc) applied based on growth stage:<ul> <li>Budbreak to flowering: Kc = 0.3</li> <li>Flowering to veraison: Kc = 0.5</li> <li>Veraison to harvest: Kc = 0.4</li> </ul> </li> <li> <p>Crop evapotranspiration (ETc) calculated as: ETc = Kc \u00d7 ET\u2080</p> </li> <li> <p>Irrigation Scheduling:</p> </li> <li>Regulated deficit irrigation applied during specific phenological stages</li> <li>Irrigation amounts calculated as percentage of ETc:<ul> <li>Pre-veraison: 80% of ETc</li> <li>Veraison to harvest: 60% of ETc</li> </ul> </li> <li>Soil moisture data used to validate and adjust calculations</li> </ol>"},{"location":"case-studies/vineyard-irrigation/#results","title":"Results","text":""},{"location":"case-studies/vineyard-irrigation/#water-usage","title":"Water Usage","text":"Month Previous Usage (m\u00b3) EVAPOTRAN-Based Usage (m\u00b3) Reduction (%) May 450 320 29% June 720 580 19% July 950 760 20% August 850 680 20% Sept 520 470 10% Total 3,490 2,810 19.5%"},{"location":"case-studies/vineyard-irrigation/#grape-quality-parameters","title":"Grape Quality Parameters","text":"Parameter Previous Season EVAPOTRAN Season Change Brix 24.2 25.1 +0.9 Titratable Acidity 6.8 g/L"},{"location":"deployment/","title":"Deployment Guide","text":"<p>This section provides detailed instructions for deploying EVAPOTRAN in various environments.</p>"},{"location":"deployment/#contents","title":"Contents","text":"<ol> <li>Local Deployment - Running locally</li> <li>Web Server Deployment - Deploying to a web server</li> <li>Production Checklist - Pre-deployment verification</li> <li>Security Considerations - Security best practices</li> <li>Performance Tuning - Optimizing performance</li> <li>Monitoring - Monitoring the application</li> <li>Backup and Recovery - Backup procedures</li> </ol>"},{"location":"deployment/digitalocean-setup/","title":"DigitalOcean Droplet Setup for FlahaCalc","text":""},{"location":"deployment/digitalocean-setup/#initial-server-setup","title":"Initial Server Setup","text":"<ol> <li>Create a new Droplet with the following specifications:</li> <li>Ubuntu 22.04 LTS</li> <li>Basic plan (\\(5-\\)10-month depending on your needs)</li> <li>Choose a datacenter region close to your target users</li> <li> <p>Add your SSH key for secure access</p> </li> <li> <p>Once the Droplet is created, SSH into it:    <pre><code>ssh root@your-droplet-ip\n</code></pre></p> </li> <li> <p>Update the system and install required packages:    <pre><code>apt update &amp;&amp; apt upgrade -y\napt install -y nginx certbot python3-certbot-nginx git\n</code></pre></p> </li> <li> <p>Install Node.js and PM2:    <pre><code>curl -fsSL https://deb.nodesource.com/setup_18.x | bash -\napt install -y nodejs\nnpm install -g pm2\n</code></pre></p> </li> </ol>"},{"location":"deployment/digitalocean-setup/#application-setup","title":"Application Setup","text":"<ol> <li> <p>Create a directory for the application:    <pre><code>mkdir -p /var/www/flahacalc\nchown -R $USER:$USER /var/www/flahacalc\n</code></pre></p> </li> <li> <p>Clone your repository:    <pre><code>cd /var/www/flahacalc\ngit clone https://github.com/your-username/flahacalc.git .\n</code></pre></p> </li> <li> <p>Install dependencies and build the application:    <pre><code>npm install\ncd EVAPOTRAN/server\nnpm install\ncd ../..\nnpm run build\n</code></pre></p> </li> <li> <p>Set up environment variables:    <pre><code>cd EVAPOTRAN/server\ncp .env.example .env  # If .env.example exists\nnano .env\n</code></pre>    Add your environment variables:    <pre><code>WEATHER_API_KEY=your_openweathermap_api_key\nJWT_SECRET=your_secure_random_string\nPORT=3000\n</code></pre></p> </li> <li> <p>Start the server with PM2:    <pre><code>pm2 start server.js --name flahacalc-server\npm2 save\npm2 startup\n</code></pre></p> </li> </ol>"},{"location":"deployment/digitalocean-setup/#nginx-configuration","title":"Nginx Configuration","text":"<ol> <li> <p>Create a new Nginx server block:    <pre><code>nano /etc/nginx/sites-available/flahacalc\n</code></pre></p> </li> <li> <p>Add the following configuration:    <pre><code>server {\n    listen 80;\n    server_name your-domain.com www.your-domain.com;\n\n    location / {\n        root /var/www/flahacalc/EVAPOTRAN;\n        index index.html;\n        try_files $uri $uri/ /index.html;\n    }\n\n    location /api/ {\n        proxy_pass http://localhost:3000;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host $host;\n        proxy_cache_bypass $http_upgrade;\n    }\n}\n</code></pre></p> </li> <li> <p>Enable the site and test the configuration:    <pre><code>ln -s /etc/nginx/sites-available/flahacalc /etc/nginx/sites-enabled/\nnginx -t\nsystemctl reload nginx\n</code></pre></p> </li> <li> <p>Set up SSL with Certbot:    <pre><code>certbot --nginx -d your-domain.com -d www.your-domain.com\n</code></pre></p> </li> </ol>"},{"location":"deployment/github-secrets/","title":"GitHub Secrets Configuration","text":"<p>Add the following secrets to your GitHub repository:</p> <ol> <li><code>DROPLET_HOST</code>: Your DigitalOcean Droplet's IP address</li> <li><code>DROPLET_USERNAME</code>: The username for SSH access (usually 'root')</li> <li><code>DROPLET_SSH_KEY</code>: Your private SSH key for accessing the Droplet</li> </ol> <p>To generate the SSH key content for GitHub: <pre><code>cat ~/.ssh/id_rsa | base64\n</code></pre></p> <p>Then paste the output as the value for DROPLET_SSH_KEY.</p>"},{"location":"deployment/github-secrets/#setting-up-github-secrets","title":"Setting Up GitHub Secrets","text":"<ol> <li>Go to your GitHub repository</li> <li>Click on \"Settings\" tab</li> <li>In the left sidebar, click on \"Secrets and variables\" &gt; \"Actions\"</li> <li>Click \"New repository secret\"</li> <li>Add each of the required secrets:</li> <li>Name: DROPLET_HOST      Value: your-droplet-ip-address</li> <li>Name: DROPLET_USERNAME      Value: root (or your custom username)</li> <li>Name: DROPLET_SSH_KEY      Value: (base64 encoded private key)</li> </ol>"},{"location":"deployment/github-secrets/#setting-up-ssh-access-on-the-droplet","title":"Setting Up SSH Access on the Droplet","text":"<ol> <li> <p>On your local machine, generate an SSH key if you don't have one:    <pre><code>ssh-keygen -t rsa -b 4096\n</code></pre></p> </li> <li> <p>Add your public key to the authorized_keys file on your Droplet:    <pre><code>ssh-copy-id root@your-droplet-ip\n</code></pre></p> </li> <li> <p>Test the connection:    <pre><code>ssh root@your-droplet-ip\n</code></pre></p> </li> <li> <p>Make sure Git is installed on your Droplet:    <pre><code>apt update &amp;&amp; apt install git -y\n</code></pre></p> </li> <li> <p>Set up Git credentials on your Droplet:    <pre><code>git config --global user.name \"Your Name\"\ngit config --global user.email \"your-email@example.com\"\n</code></pre></p> </li> </ol>"},{"location":"deployment/monitoring-backup/","title":"Monitoring and Backup Plan","text":""},{"location":"deployment/monitoring-backup/#monitoring","title":"Monitoring","text":"<ol> <li> <p>Set up basic monitoring with PM2:    <pre><code>pm2 install pm2-logrotate\npm2 set pm2-logrotate:max_size 10M\npm2 set pm2-logrotate:retain 7\n</code></pre></p> </li> <li> <p>Set up DigitalOcean Monitoring:</p> </li> <li>Enable DigitalOcean Monitoring for your Droplet</li> <li>Set up alert policies for CPU, memory, and disk usage</li> </ol>"},{"location":"deployment/monitoring-backup/#backups","title":"Backups","text":"<ol> <li>Enable DigitalOcean Backups:</li> <li>Go to your Droplet settings</li> <li> <p>Enable weekly backups</p> </li> <li> <p>Set up a database backup script (when you implement a database):    <pre><code>mkdir -p /var/backups/evapotran\n\n# Create a backup script\ncat &gt; /usr/local/bin/backup-evapotran.sh &lt;&lt; 'EOF'\n#!/bin/bash\n\nDATE=$(date +%Y-%m-%d)\nBACKUP_DIR=\"/var/backups/evapotran\"\n\n# Backup database (example for MongoDB)\nmongodump --out \"$BACKUP_DIR/mongodb-$DATE\"\n\n# Compress the backup\ntar -czf \"$BACKUP_DIR/mongodb-$DATE.tar.gz\" \"$BACKUP_DIR/mongodb-$DATE\"\nrm -rf \"$BACKUP_DIR/mongodb-$DATE\"\n\n# Keep only the last 7 backups\nfind \"$BACKUP_DIR\" -name \"mongodb-*.tar.gz\" -type f -mtime +7 -delete\nEOF\n\n# Make the script executable\nchmod +x /usr/local/bin/backup-evapotran.sh\n\n# Add to crontab to run daily\n(crontab -l 2&gt;/dev/null; echo \"0 2 * * * /usr/local/bin-backup-evapotran.sh\") | crontab -\n</code></pre></p> </li> </ol>"},{"location":"deployment/nginx-config/","title":"Nginx Configuration for Production","text":"<p>Create a file at <code>/etc/nginx/sites-available/flahacalc</code> with the following content:</p> <pre><code>server {\n    listen 80;\n    server_name flaha.org www.flaha.org;\n\n    # Redirect HTTP to HTTPS\n    return 301 https://$host$request_uri;\n}\n\nserver {\n    listen 443 ssl;\n    server_name flaha.org www.flaha.org;\n\n    # SSL configuration\n    ssl_certificate /etc/letsencrypt/live/flaha.org/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/flaha.org/privkey.pem;\n\n    # Main site files\n    location / {\n        root /var/www/flahacalc/EVAPOTRAN;\n        index index.html;\n        try_files $uri $uri/ /index.html;\n    }\n\n    # API proxy\n    location /api/ {\n        proxy_pass http://localhost:3000/api/;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host $host;\n        proxy_cache_bypass $http_upgrade;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n\n    # Security headers\n    add_header X-Content-Type-Options nosniff;\n    add_header X-Frame-Options SAMEORIGIN;\n    add_header X-XSS-Protection \"1; mode=block\";\n}\n</code></pre> <p>Then enable the site and set up SSL:</p> <pre><code># Create symbolic link\nsudo ln -s /etc/nginx/sites-available/flahacalc /etc/nginx/sites-enabled/\n\n# Test Nginx configuration\nsudo nginx -t\n\n# If the test passes, reload Nginx\nsudo systemctl reload nginx\n\n# Set up SSL with Let's Encrypt\nsudo apt install certbot python3-certbot-nginx\nsudo certbot --nginx -d flaha.org -d www.flaha.org\n</code></pre>"},{"location":"deployment/pm2-setup/","title":"PM2 Process Management Setup","text":"<ol> <li> <p>Navigate to the server directory:    <pre><code>cd /var/www/evapotran/EVAPOTRAN/server\n</code></pre></p> </li> <li> <p>Start the server with PM2:    <pre><code>pm2 start server.js --name evapotran-server\n</code></pre></p> </li> <li> <p>Configure PM2 to start on system boot:    <pre><code>pm2 startup\npm2 save\n</code></pre></p> </li> <li> <p>Monitor the application:    <pre><code>pm2 status\npm2 logs evapotran-server\n</code></pre></p> </li> </ol>"},{"location":"deployment/post-deployment-optimization/","title":"Post-Deployment Optimization","text":"<p>After deploying the application to your server, follow these steps to apply performance optimizations.</p>"},{"location":"deployment/post-deployment-optimization/#1-connect-to-your-server","title":"1. Connect to Your Server","text":"<p>SSH into your server:</p> <pre><code>ssh $DROPLET_USERNAME@$DROPLET_HOST\n</code></pre>"},{"location":"deployment/post-deployment-optimization/#2-navigate-to-the-application-directory","title":"2. Navigate to the Application Directory","text":"<pre><code>cd /var/www/flahacalc\n</code></pre>"},{"location":"deployment/post-deployment-optimization/#3-run-the-optimization-script","title":"3. Run the Optimization Script","text":"<pre><code># Make sure the script is executable\nchmod +x scripts/server/optimize-server.sh\n\n# Run the optimization script\nbash scripts/server/optimize-server.sh\n</code></pre> <p>This script will: - Install required performance dependencies (node-cache, express-rate-limit, compression, morgan) - Apply server-side optimizations - Restart the server to apply changes</p>"},{"location":"deployment/post-deployment-optimization/#4-verify-optimizations","title":"4. Verify Optimizations","text":"<p>Check that the optimizations were applied successfully:</p> <pre><code># Check server logs for optimization messages\npm2 logs flahacalc-server --lines 20\n\n# Test server response with compression\ncurl -I -H \"Accept-Encoding: gzip\" https://yourdomain.com/api/test\n</code></pre> <p>You should see <code>Content-Encoding: gzip</code> in the response headers, indicating compression is working.</p>"},{"location":"deployment/post-deployment-optimization/#5-monitor-performance","title":"5. Monitor Performance","text":"<p>After applying optimizations, monitor the server performance:</p> <pre><code># Check server status\npm2 status\n\n# Monitor server resources\npm2 monit\n</code></pre>"},{"location":"deployment/post-deployment-optimization/#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter issues after optimization:</p> <ol> <li> <p>Check error logs:    <pre><code>pm2 logs flahacalc-server --err --lines 50\n</code></pre></p> </li> <li> <p>Verify dependencies were installed:    <pre><code>cd /var/www/flahacalc/EVAPOTRAN/server\nnpm list | grep -E 'node-cache|express-rate-limit|compression|morgan'\n</code></pre></p> </li> <li> <p>If necessary, restart the server:    <pre><code>pm2 restart flahacalc-server\n</code></pre></p> </li> </ol>"},{"location":"deployment/post-deployment-optimization/#automation-option","title":"Automation Option","text":"<p>To automate this process for future deployments, add the optimization step to your deployment workflow:</p> <pre><code># In your deploy.sh script, add:\nssh $DROPLET_USERNAME@$DROPLET_HOST &lt;&lt; 'EOF'\ncd /var/www/flahacalc\nbash scripts/server/optimize-server.sh\nEOF\n</code></pre> <p>This will automatically run the optimization script after each deployment.</p>"},{"location":"deployment/production-checklist/","title":"Production Deployment Checklist","text":""},{"location":"deployment/production-checklist/#before-deployment","title":"Before Deployment","text":"<ul> <li>[ ] Run pre-deployment checks: <code>npm run pre-deploy</code></li> <li>[ ] Test the application locally with production settings</li> <li>[ ] Ensure all API keys and secrets are properly secured</li> <li>[ ] Update version numbers in relevant files</li> <li>[ ] Commit all changes to the repository</li> </ul>"},{"location":"deployment/production-checklist/#server-setup-first-time-only","title":"Server Setup (First Time Only)","text":"<ul> <li>[ ] Set up a DigitalOcean Droplet with Ubuntu 22.04</li> <li>[ ] Install required packages:   <pre><code>sudo apt update &amp;&amp; sudo apt upgrade -y\nsudo apt install -y nginx git\n</code></pre></li> <li>[ ] Install Node.js:   <pre><code>curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -\nsudo apt install -y nodejs\n</code></pre></li> <li>[ ] Install PM2:   <pre><code>sudo npm install -g pm2\n</code></pre></li> <li>[ ] Set up the application directory:   <pre><code>sudo mkdir -p /var/www/flahacalc\nsudo chown $USER:$USER /var/www/flahacalc\n</code></pre></li> <li>[ ] Clone the repository:   <pre><code>cd /var/www/flahacalc\ngit clone https://github.com/your-username/flahacalc.git .\n</code></pre></li> <li>[ ] Set up Nginx (see nginx-config)</li> <li>[ ] Set up SSL with Let's Encrypt</li> </ul>"},{"location":"deployment/production-checklist/#deployment-process","title":"Deployment Process","text":"<ul> <li>[ ] Push changes to GitHub</li> <li>[ ] Verify GitHub Actions workflow completes successfully</li> <li>[ ] Check the application is working correctly on the production server</li> <li>[ ] Verify API endpoints are working</li> <li>[ ] Check server logs for any errors:   <pre><code>pm2 logs flahacalc-server\n</code></pre></li> </ul>"},{"location":"deployment/production-checklist/#post-deployment","title":"Post-Deployment","text":"<ul> <li>[ ] Monitor application performance</li> <li>[ ] Check for any errors in the logs</li> <li>[ ] Verify all features are working correctly</li> <li>[ ] Update documentation if needed</li> </ul>"},{"location":"deployment/production-config/","title":"Production Deployment Configuration","text":""},{"location":"deployment/production-config/#server-setup","title":"Server Setup","text":"<ol> <li> <p>Ensure Node.js and PM2 are installed on the server:    <pre><code>curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -\nsudo apt install -y nodejs\nsudo npm install -g pm2\n</code></pre></p> </li> <li> <p>Set up the Nginx configuration:    <pre><code>server {\n    listen 80;\n    server_name flaha.org www.flaha.org;\n\n    location / {\n        root /var/www/flahacalc/EVAPOTRAN;\n        index index.html;\n        try_files $uri $uri/ /index.html;\n    }\n\n    location /api/ {\n        proxy_pass http://localhost:3000/api/;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host $host;\n        proxy_cache_bypass $http_upgrade;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}\n</code></pre></p> </li> <li> <p>Configure SSL with Let's Encrypt:    <pre><code>sudo apt install certbot python3-certbot-nginx\nsudo certbot --nginx -d flaha.org -d www.flaha.org\n</code></pre></p> </li> <li> <p>Set up the weather API server with PM2:    <pre><code>cd /var/www/flahacalc/EVAPOTRAN/server\nnpm install\npm2 start server.js --name flahacalc-server\npm2 save\npm2 startup\n</code></pre></p> </li> </ol>"},{"location":"deployment/quick-start/","title":"FlahaCalc Deployment Quick Start Guide","text":"<p>This guide provides a quick overview of how to deploy FlahaCalc to production.</p>"},{"location":"deployment/quick-start/#prerequisites","title":"Prerequisites","text":"<ol> <li>A GitHub account with access to the FlahaCalc repository</li> <li>A DigitalOcean account</li> <li>A domain name (optional but recommended)</li> </ol>"},{"location":"deployment/quick-start/#step-1-create-a-digitalocean-droplet","title":"Step 1: Create a DigitalOcean Droplet","text":"<ol> <li>Log in to DigitalOcean</li> <li>Create a new Droplet with Ubuntu 22.04 LTS</li> <li>Choose the Basic plan (\\(5-\\)10-month)</li> <li>Add your SSH key</li> <li>Create the Droplet</li> </ol>"},{"location":"deployment/quick-start/#step-2-set-up-github-secrets","title":"Step 2: Set Up GitHub Secrets","text":"<ol> <li>Go to your GitHub repository</li> <li>Navigate to Settings &gt; Secrets and variables &gt; Actions</li> <li>Add the following secrets:</li> <li><code>DROPLET_HOST</code>: Your Droplet's IP address</li> <li><code>DROPLET_USERNAME</code>: Usually 'root'</li> <li><code>DROPLET_SSH_KEY</code>: Your private SSH key (base64 encoded)</li> </ol>"},{"location":"deployment/quick-start/#step-3-initial-server-setup","title":"Step 3: Initial Server Setup","text":"<p>SSH into your Droplet and run:</p> <pre><code># Download the setup script\ncurl -o setup.sh https://raw.githubusercontent.com/your-username/flahacalc/main/scripts/droplet-setup.sh\n\n# Make it executable\nchmod +x setup.sh\n\n# Run the setup script\n./setup.sh\n</code></pre>"},{"location":"deployment/quick-start/#step-4-configure-domain-and-ssl","title":"Step 4: Configure Domain and SSL","text":"<ol> <li>Point your domain to your Droplet's IP address</li> <li>Set up SSL with Let's Encrypt:    <pre><code>sudo certbot --nginx -d your-domain.com -d www.your-domain.com\n</code></pre></li> </ol>"},{"location":"deployment/quick-start/#step-5-test-automatic-deployment","title":"Step 5: Test Automatic Deployment","text":"<p>Make a small change to your repository, commit, and push to the main branch. The GitHub Actions workflow should automatically deploy the changes to your Droplet.</p>"},{"location":"deployment/quick-start/#step-6-verify-deployment","title":"Step 6: Verify Deployment","text":"<ol> <li>Visit your domain or Droplet IP in a web browser</li> <li>Check the logs: <code>pm2 logs flahacalc-server</code></li> <li>Check the application status: <code>pm2 status</code></li> </ol>"},{"location":"deployment/quick-start/#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter issues:</p> <ol> <li>Check GitHub Actions logs for build errors</li> <li>Check server logs: <code>pm2 logs flahacalc-server</code></li> <li>Verify Nginx configuration: <code>nginx -t</code></li> <li>Check application status: <code>pm2 status</code></li> </ol>"},{"location":"deployment/security-checklist/","title":"Security Deployment Checklist","text":""},{"location":"deployment/security-checklist/#before-deployment","title":"Before Deployment","text":"<ul> <li>[ ] Run <code>npm audit</code> and fix vulnerabilities</li> <li>[ ] Remove development dependencies from production build</li> <li>[ ] Ensure all secrets are stored in environment variables</li> <li>[ ] Generate new JWT secret for production</li> <li>[ ] Configure proper CORS settings for production domains</li> <li>[ ] Set up rate limiting for API endpoints</li> <li>[ ] Enable HTTPS only (no HTTP)</li> <li>[ ] Configure Content Security Policy</li> </ul>"},{"location":"deployment/security-checklist/#server-setup","title":"Server Setup","text":"<ul> <li>[ ] Update and upgrade all packages</li> <li>[ ] Install and configure firewall (UFW)</li> <li>[ ] Install and configure Fail2Ban</li> <li>[ ] Set up automatic security updates</li> <li>[ ] Secure shared memory</li> <li>[ ] Create a non-root user for application management</li> <li>[ ] Disable root SSH login (after setting up non-root user)</li> <li>[ ] Configure SSH to use key authentication only</li> </ul>"},{"location":"deployment/security-checklist/#nginx-configuration","title":"Nginx Configuration","text":"<ul> <li>[ ] Enable HTTPS with strong SSL settings</li> <li>[ ] Configure HTTP to HTTPS redirection</li> <li>[ ] Add security headers</li> <li>[ ] Set up rate limiting</li> <li>[ ] Block access to sensitive files and directories</li> <li>[ ] Configure proper proxy settings</li> </ul>"},{"location":"deployment/security-checklist/#application-security","title":"Application Security","text":"<ul> <li>[ ] Implement proper authentication and authorization</li> <li>[ ] Sanitize all user inputs</li> <li>[ ] Implement XSS protection</li> <li>[ ] Set secure cookie options</li> <li>[ ]</li> </ul>"},{"location":"development/","title":"Development Guide","text":"<p>This section provides information for developers who want to contribute to EVAPOTRAN or extend its functionality.</p>"},{"location":"development/#contents","title":"Contents","text":"<ol> <li>Contributing - How to contribute to the project</li> <li>Code Guidelines - Coding standards and best practices</li> <li>Project Structure - Overview of the codebase organization</li> <li>Build Process - How to build the application</li> <li>Testing - Testing procedures and guidelines</li> <li>Release Process - How to create and publish releases</li> <li>Workflow - Recommended development workflow</li> </ol>"},{"location":"development/code-guidelines/","title":"Code Guidelines","text":"<p>This document outlines the coding standards and best practices for contributing to the EVAPOTRAN project.</p>"},{"location":"development/code-guidelines/#javascript-guidelines","title":"JavaScript Guidelines","text":"<ol> <li>Use ES6+ features where appropriate</li> <li>Follow camelCase naming for variables and functions</li> <li>Use meaningful variable names that clearly indicate purpose</li> <li>Add comments for complex logic</li> <li>Keep functions small and focused on a single task</li> <li>Use consistent indentation (2 spaces)</li> <li>Avoid global variables whenever possible</li> </ol>"},{"location":"development/code-guidelines/#html-guidelines","title":"HTML Guidelines","text":"<ol> <li>Use semantic HTML elements appropriately</li> <li>Maintain proper indentation for readability</li> <li>Include alt text for all images</li> <li>Use descriptive class names following BEM methodology</li> <li>Validate HTML to ensure compliance with standards</li> </ol>"},{"location":"development/code-guidelines/#css-guidelines","title":"CSS Guidelines","text":"<ol> <li>Organize CSS by component</li> <li>Use class selectors instead of ID selectors when possible</li> <li>Minimize use of !important</li> <li>Use variables for colors and repeated values</li> <li>Follow mobile-first approach for responsive design</li> </ol>"},{"location":"development/code-guidelines/#documentation","title":"Documentation","text":"<ol> <li>Document all functions with JSDoc comments</li> <li>Keep README files up-to-date</li> <li>Include examples for complex functionality</li> <li>Document known limitations and edge cases</li> </ol>"},{"location":"development/code-guidelines/#testing","title":"Testing","text":"<ol> <li>Test across multiple browsers</li> <li>Verify mobile responsiveness</li> <li>Test with various input values</li> <li>Validate calculations against known reference values</li> </ol>"},{"location":"development/contributing/","title":"Contributing to EVAPOTRAN","text":"<p>We welcome contributions to the EVAPOTRAN project! This document provides guidelines and instructions for contributing.</p>"},{"location":"development/contributing/#how-to-contribute","title":"How to Contribute","text":"<ol> <li>Report bugs and request features by creating issues on our GitHub repository</li> <li>Submit pull requests with bug fixes or new features</li> <li>Improve documentation by submitting corrections or additions</li> <li>Share case studies of how you've used EVAPOTRAN in real-world applications</li> </ol>"},{"location":"development/contributing/#development-process","title":"Development Process","text":"<ol> <li>Fork the repository to your GitHub account</li> <li>Create a branch for your changes</li> <li>Make your changes following our code guidelines</li> <li>Test your changes thoroughly</li> <li>Submit a pull request with a clear description of your changes</li> </ol>"},{"location":"development/contributing/#code-guidelines","title":"Code Guidelines","text":"<p>Please follow our Code Guidelines when contributing code to EVAPOTRAN.</p>"},{"location":"development/contributing/#documentation","title":"Documentation","text":"<p>When contributing documentation:</p> <ol> <li>Use Markdown format</li> <li>Follow the existing documentation structure</li> <li>Include clear examples where appropriate</li> <li>Check for spelling and grammar errors</li> </ol>"},{"location":"development/contributing/#contact","title":"Contact","text":"<p>If you have questions about contributing, please contact us at info@flaha.org.</p>"},{"location":"development/documentation-management/","title":"Documentation Management","text":"<p>FlahaCalc documentation is maintained in multiple formats to ensure accessibility for different users.</p>"},{"location":"development/documentation-management/#documentation-sources","title":"Documentation Sources","text":"<ol> <li>Source Files: Markdown files in the <code>docs/</code> directory of the main repository</li> <li>ReadTheDocs: Web-based documentation at https://evapotran-doc.flaha.org</li> <li>GitHub Wiki: Wiki pages at https://github.com/rafatahmed/FlahaCalc/wiki</li> <li>PDF Documentation: Downloadable PDF from ReadTheDocs</li> </ol>"},{"location":"development/documentation-management/#documentation-workflow","title":"Documentation Workflow","text":"<ol> <li>Update Source Files: Make changes to the markdown files in the <code>docs/</code> directory</li> <li>Build Documentation: Run <code>mkdocs build</code> to generate the static site</li> <li>Automatic Deployment: Push changes to the main branch to trigger automatic deployment:</li> <li>GitHub Actions will build and deploy to ReadTheDocs</li> <li>GitHub Actions will sync changes to the GitHub Wiki</li> </ol>"},{"location":"development/documentation-management/#synchronization-process","title":"Synchronization Process","text":"<p>The documentation synchronization is handled by:</p> <ol> <li>ReadTheDocs Integration: Automatically builds documentation from the repository</li> <li>Wiki Sync GitHub Action: Syncs documentation to the GitHub Wiki</li> <li>PDF Generation: Handled by ReadTheDocs</li> </ol>"},{"location":"development/documentation-management/#manual-synchronization","title":"Manual Synchronization","text":"<p>If needed, you can manually sync documentation to the wiki:</p> <pre><code># From the project root\nbash scripts/docs/sync-to-wiki.sh \"Your commit message here\"\n</code></pre>"},{"location":"development/documentation-management/#documentation-structure","title":"Documentation Structure","text":"<p>The documentation follows this structure:</p> <ul> <li>Getting Started: Introduction, installation, and quick start guides</li> <li>User Guide: Detailed instructions for using FlahaCalc</li> <li>Technical Reference: Technical details about algorithms and methods</li> <li>Development: Guidelines for developers</li> <li>FAQ: Frequently asked questions</li> <li>Release Notes: Information about each release</li> </ul>"},{"location":"development/project-structure/","title":"Project Structure","text":"<p>This document provides a detailed overview of the EVAPOTRAN project structure to help developers understand the codebase organization.</p>"},{"location":"development/project-structure/#directory-structure","title":"Directory Structure","text":"<pre><code>EVAPOTRAN/\n\u2502\n\u251c\u2500\u2500 index.html                # Main landing page\n\u251c\u2500\u2500 calculator.html           # Manual ET\u2080 calculator\n\u251c\u2500\u2500 epw-import.html           # EPW file import interface\n\u251c\u2500\u2500 epw-heatmap.html          # Weather visualization dashboard\n\u251c\u2500\u2500 live-weather.html         # Live weather data integration\n\u2502\n\u251c\u2500\u2500 css/\n\u2502   \u2514\u2500\u2500 style.css             # Main stylesheet\n\u2502\n\u251c\u2500\u2500 js/\n\u2502   \u251c\u2500\u2500 script.js             # Core calculation engine\n\u2502   \u251c\u2500\u2500 epw-import.js         # EPW file parsing utilities\n\u2502   \u251c\u2500\u2500 epw-heatmap.js        # Data visualization components\n\u2502   \u2514\u2500\u2500 live-weather.js       # Weather API integration\n\u2502\n\u251c\u2500\u2500 img/\n\u2502   \u251c\u2500\u2500 Flaha_logo.svg        # Vector logo\n\u2502   \u2514\u2500\u2500 Flaha_logo.png        # Fallback raster logo\n\u2502\n\u2514\u2500\u2500 docs/                     # Documentation\n    \u251c\u2500\u2500 user-guide/           # End-user documentation\n    \u251c\u2500\u2500 technical/            # Technical documentation\n    \u251c\u2500\u2500 development/          # Developer guidelines\n    \u2514\u2500\u2500 about/                # Project information\n</code></pre>"},{"location":"development/project-structure/#core-files","title":"Core Files","text":""},{"location":"development/project-structure/#html-files","title":"HTML Files","text":"<ul> <li>index.html: Landing page with navigation to all modules</li> <li>calculator.html: Manual input form for ET\u2080 calculation</li> <li>epw-import.html: Interface for uploading and processing EPW files</li> <li>epw-heatmap.html: Visualization tools for weather data analysis</li> <li>live-weather.html: Interface for fetching real-time weather data</li> </ul>"},{"location":"development/project-structure/#javascript-files","title":"JavaScript Files","text":"<ul> <li>script.js: Implements the FAO Penman-Monteith equation and core calculation logic</li> <li>epw-import.js: Handles parsing and processing of EPW weather files</li> <li>epw-heatmap.js: Creates data visualizations using D3.js</li> <li>live-weather.js: Integrates with OpenWeatherMap API for live data</li> </ul>"},{"location":"development/project-structure/#css-files","title":"CSS Files","text":"<ul> <li>style.css: Contains all styling for the application, organized by component</li> </ul>"},{"location":"development/project-structure/#documentation-structure","title":"Documentation Structure","text":"<p>The documentation is organized into four main sections:</p> <ol> <li>User Guide: End-user documentation for using the application</li> <li>Technical Documentation: Detailed explanation of algorithms and methods</li> <li>Development: Guidelines for developers contributing to the project</li> <li>About: License information and contact details</li> </ol>"},{"location":"development/project-structure/#build-and-deployment","title":"Build and Deployment","text":"<p>EVAPOTRAN is a static web application with no build process required. To deploy:</p> <ol> <li>Copy all files to a web server</li> <li>Ensure the directory structure is maintained</li> <li>Access via a web browser</li> </ol> <p>For local development, simply open any HTML file in a web browser.</p>"},{"location":"development/project-structure/#server-components","title":"Server Components","text":""},{"location":"development/project-structure/#performance-optimization","title":"Performance Optimization","text":"<p>The server implements several performance optimization techniques:</p> <ul> <li>server.js: Core server with performance optimizations</li> <li>API response caching using <code>node-cache</code></li> <li>Rate limiting with <code>express-rate-limit</code></li> <li>Response compression with <code>compression</code></li> <li>Request logging with <code>morgan</code></li> </ul>"},{"location":"development/project-structure/#scripts","title":"Scripts","text":"<p>The <code>scripts/server/</code> directory contains server management scripts:</p> <ul> <li>optimize-server.sh: Installs and configures performance optimization dependencies</li> <li>restart-server.sh: Safely restarts the server while preserving sessions</li> <li>fix-api-key.sh: Updates API keys and ensures proper configuration</li> <li>debug-api-key.sh: Diagnoses API key configuration issues</li> </ul>"},{"location":"development/release-process/","title":"Release Process","text":"<p>This guide explains how to create a new release of EVAPOTRAN from your local development machine.</p>"},{"location":"development/release-process/#prerequisites","title":"Prerequisites","text":"<ul> <li>Ensure you have the latest code from the main branch</li> <li>Make sure all changes for the release are committed</li> <li>Verify that all tests pass</li> </ul>"},{"location":"development/release-process/#creating-a-release","title":"Creating a Release","text":"<ol> <li>Pull the latest changes from the main branch</li> </ol> <pre><code>git checkout main\ngit pull origin main\n</code></pre> <ol> <li>Generate release notes</li> </ol> <pre><code># Replace 0.2.0 with your target version number\nnpm run release:notes 0.2.0\n</code></pre> <p>This creates a <code>RELEASE_NOTES.md</code> file with a template.</p> <ol> <li>Edit the release notes</li> </ol> <p>Open <code>RELEASE_NOTES.md</code> in your editor and add detailed information about the release:    - Key features    - Bug fixes    - Performance improvements    - Known issues</p> <ol> <li>Create the release</li> </ol> <pre><code># Replace 0.2.0 with your target version number\nnpm run release:create 0.2.0\n</code></pre> <p>This script will:    - Update version numbers in all relevant files    - Commit these changes    - Create a Git tag    - Push the changes and tag to GitHub</p> <ol> <li> <p>Create a GitHub release</p> </li> <li> <p>Go to https://github.com/rafatahmed/FlahaCalc/releases/new</p> </li> <li>Select the tag you just created (e.g., <code>v0.2.0</code>)</li> <li>Set the release title (e.g., \"EVAPOTRAN 0.2.0\")</li> <li>Copy and paste the content from <code>RELEASE_NOTES.md</code></li> <li>Click \"Publish release\"</li> </ol>"},{"location":"development/release-process/#after-creating-a-release","title":"After Creating a Release","text":"<p>After creating a release, you should:</p> <ol> <li>Deploy to production</li> </ol> <pre><code>npm run deploy:production\n</code></pre> <ol> <li>Verify the deployment</li> </ol> <p>Check that the new version is running correctly on the production server.</p> <ol> <li>Start planning the next release</li> </ol> <p>Update your roadmap and begin work on the next set of features.</p>"},{"location":"development/workflow/","title":"FlahaCalc Development Workflow","text":"<p>This document outlines the recommended development workflow for the FlahaCalc project.</p>"},{"location":"development/workflow/#development-environment-setup","title":"Development Environment Setup","text":"<ol> <li> <p>Clone the repository <pre><code>git clone https://github.com/rafatahmed/FlahaCalc.git\ncd FlahaCalc\n</code></pre></p> </li> <li> <p>Install dependencies <pre><code>npm install\ncd EVAPOTRAN/server\nnpm install\ncd ../..\n</code></pre></p> </li> <li> <p>Set up environment variables <pre><code>cp EVAPOTRAN/server/.env.example EVAPOTRAN/server/.env\n# Edit the .env file with your API keys\n</code></pre></p> </li> </ol>"},{"location":"development/workflow/#development-workflow","title":"Development Workflow","text":""},{"location":"development/workflow/#standard-workflow-recommended","title":"Standard Workflow (Recommended)","text":"<ol> <li> <p>Pull the latest changes <pre><code>git pull origin main\n</code></pre></p> </li> <li> <p>Make your changes    Edit files as needed.</p> </li> <li> <p>Test your changes locally <pre><code>npm run build\nnpm run deploy:local\n</code></pre></p> </li> <li> <p>Commit your changes <pre><code>git add .\ngit commit -m \"Description of your changes\"\n</code></pre></p> </li> <li> <p>Push your changes to GitHub <pre><code>git push origin main\n</code></pre></p> </li> <li> <p>GitHub Actions will automatically deploy your changes    Check the status at: https://github.com/rafatahmed/FlahaCalc/actions</p> </li> <li> <p>Verify your changes on the production server    Visit https://flaha.org to verify your changes.</p> </li> </ol>"},{"location":"development/workflow/#using-the-workflow-script","title":"Using the Workflow Script","text":"<p>We provide a script that guides you through the development workflow:</p> <pre><code>bash scripts/dev/workflow.sh\n</code></pre>"},{"location":"development/workflow/#direct-server-edits-emergency-only","title":"Direct Server Edits (Emergency Only)","text":"<p>In case of emergency, you can make changes directly on the server:</p> <ol> <li> <p>SSH into the server <pre><code>ssh root@207.154.202.6\n</code></pre></p> </li> <li> <p>Run the direct edit script <pre><code>cd /var/www/flahacalc\nbash scripts/server/direct-edit.sh\n</code></pre></p> </li> <li> <p>Follow the prompts to make, commit, and apply your changes</p> </li> </ol>"},{"location":"development/workflow/#performance-optimization-workflow","title":"Performance Optimization Workflow","text":"<p>When implementing performance improvements:</p> <ol> <li> <p>Measure current performance <pre><code># Run performance benchmark\nbash scripts/dev/benchmark.sh\n</code></pre></p> </li> <li> <p>Implement optimizations</p> </li> <li>Follow the guidelines in <code>docs/technical/performance-optimization.md</code></li> <li> <p>Use the optimization scripts in <code>scripts/server/</code></p> </li> <li> <p>Test optimizations <pre><code># Run optimization script\nbash scripts/server/optimize-server.sh\n\n# Verify optimizations\nbash scripts/dev/benchmark.sh\n</code></pre></p> </li> <li> <p>Monitor in production</p> </li> <li>Check server logs for performance metrics</li> <li>Monitor response times and resource usage</li> <li>Adjust optimizations based on real-world usage patterns</li> </ol>"},{"location":"development/workflow/#performance-testing","title":"Performance Testing","text":"<p>Before deploying major changes, run performance tests:</p> <pre><code># Run load test (simulates 100 concurrent users)\nbash scripts/dev/load-test.sh 100\n\n# Run stress test (gradually increases load until failure)\nbash scripts/dev/stress-test.sh\n</code></pre> <p>These tests help identify potential bottlenecks before they affect users in production.</p>"},{"location":"development/workflow/#deployment-options","title":"Deployment Options","text":""},{"location":"development/workflow/#automatic-deployment","title":"Automatic Deployment","text":"<p>Changes pushed to the <code>main</code> branch are automatically deployed via GitHub Actions.</p>"},{"location":"development/workflow/#manual-deployment","title":"Manual Deployment","text":"<p>You can manually trigger a deployment from GitHub Actions:</p> <ol> <li>Go to https://github.com/rafatahmed/FlahaCalc/actions</li> <li>Select the \"Deploy to DigitalOcean\" workflow</li> <li>Click \"Run workflow\"</li> <li>Choose whether to apply fixes after deployment</li> <li>Click \"Run workflow\"</li> </ol>"},{"location":"development/workflow/#deployment-with-fixes","title":"Deployment with Fixes","text":"<p>If you need to apply fixes after deployment:</p> <pre><code>npm run deploy:with-fixes\n</code></pre> <p>This will commit and push your changes, then run the fix-all script on the server.</p>"},{"location":"development/workflow/#troubleshooting","title":"Troubleshooting","text":"<p>If deployment fails:</p> <ol> <li>Check the GitHub Actions logs</li> <li>SSH into the server and check the logs:    <pre><code>pm2 logs flahacalc-server\ntail -f /var/log/nginx/error.log\n</code></pre></li> <li>Run the fix-all script manually:    <pre><code>bash scripts/server/fix-all.sh\n</code></pre></li> </ol>"},{"location":"educational/climate-data-guide/","title":"Understanding Climate Data for Evapotranspiration","text":"<p>This guide explains the climate parameters used in evapotranspiration calculations and how to obtain reliable data for your calculations.</p>"},{"location":"educational/climate-data-guide/#essential-climate-parameters","title":"Essential Climate Parameters","text":""},{"location":"educational/climate-data-guide/#temperature","title":"Temperature","text":"<p>What it is: The measure of heat energy in the air, typically recorded as minimum and maximum daily values.</p> <p>How it affects ET\u2080: Higher temperatures increase evaporation rates by providing more energy for the phase change from liquid to vapor.</p> <p>Measurement units: Degrees Celsius (\u00b0C) or Fahrenheit (\u00b0F)</p> <p>Data sources: - Weather stations - National meteorological services - Satellite-derived products - EPW files</p>"},{"location":"educational/climate-data-guide/#solar-radiation","title":"Solar Radiation","text":"<p>What it is: The electromagnetic radiation emitted by the sun that reaches the Earth's surface.</p> <p>How it affects ET\u2080: Provides the energy that drives evaporation; higher radiation leads to higher evapotranspiration rates.</p> <p>Measurement units: Megajoules per square meter per day (MJ/m\u00b2-day) or Watts per square meter (W-m\u00b2)</p> <p>Data sources: - Pyranometers at weather stations - Satellite-derived products - Estimated from sunshine hours</p>"},{"location":"educational/climate-data-guide/#humidity","title":"Humidity","text":"<p>What it is: The amount of water vapor present in the air, often measured as relative humidity (percentage of maximum possible humidity at a given temperature).</p> <p>How it affects ET\u2080: Lower humidity increases the vapor pressure deficit, accelerating evapotranspiration.</p> <p>Measurement units: Percentage (%) for relative humidity; kilopascals (kPa) for vapor pressure</p> <p>Data sources: - Hygrometers at weather stations - Psychrometers (wet and dry bulb thermometers) - Calculated from dew point temperature</p>"},{"location":"educational/climate-data-guide/#wind-speed","title":"Wind Speed","text":"<p>What it is: The rate of air movement across the Earth's surface.</p> <p>How it affects ET\u2080: Wind removes humid air near plant and soil surfaces, replacing it with drier air that can accept more moisture.</p> <p>Measurement units: Meters per second (m-s) or kilometers per hour (km-h)</p> <p>Data sources: - Anemometers at weather stations - Reanalysis datasets - Airport weather reports</p>"},{"location":"educational/climate-data-guide/#atmospheric-pressure","title":"Atmospheric Pressure","text":"<p>What it is: The force exerted by the weight of air above a given point.</p> <p>How it affects ET\u2080: Affects the psychrometric constant used in ET\u2080 calculations.</p> <p>Measurement units: Kilopascals (kPa)</p> <p>Data sources: - Barometers at weather stations - Estimated from elevation</p>"},{"location":"educational/climate-data-guide/#data-quality-considerations","title":"Data Quality Considerations","text":""},{"location":"educational/climate-data-guide/#1-temporal-resolution","title":"1. Temporal Resolution","text":"<p>Different temporal resolutions serve different purposes:</p> <ul> <li>Hourly data: Best for detailed studies and daily calculations</li> <li>Daily data: Suitable for most irrigation scheduling</li> <li>Monthly averages: Useful for long-term planning</li> <li>Annual data: Appropriate for regional water resource planning</li> </ul>"},{"location":"educational/climate-data-guide/#2-spatial-representativeness","title":"2. Spatial Representativeness","text":"<p>Consider how well your data source represents your specific location:</p> <ul> <li>Distance from weather station: Data becomes less representative with distance</li> <li>Topographic differences: Elevation, slope, and aspect affect local climate</li> <li>Coastal vs. inland: Maritime influence creates different microclimates</li> <li>Urban vs. rural: Urban heat islands affect temperature readings</li> </ul>"},{"location":"educational/climate-data-guide/#3-data-completeness","title":"3. Data Completeness","text":"<p>Missing data can significantly impact calculations:</p> <ul> <li>Check for gaps in time series data</li> <li>Understand how missing values are handled in your data source</li> <li>Consider using multiple data sources to fill gaps</li> </ul>"},{"location":"educational/climate-data-guide/#4-measurement-height","title":"4. Measurement Height","text":"<p>Standard measurement heights for weather parameters:</p> <ul> <li>Temperature and humidity: 2 meters above ground</li> <li>Wind speed: 10 meters above ground (often converted to 2m for ET\u2080 calculations)</li> <li>Precipitation: Ground level</li> </ul>"},{"location":"educational/climate-data-guide/#data-sources-for-evapotranspiration-calculations","title":"Data Sources for Evapotranspiration Calculations","text":""},{"location":"educational/climate-data-guide/#1-weather-stations","title":"1. Weather Stations","text":"<p>Pros: - High accuracy when properly maintained - Direct measurements of all required parameters - Often include long historical records</p> <p>Cons: - Limited spatial coverage - Potential for instrument errors - May have data gaps</p> <p>Examples: - NOAA weather stations - Agricultural research station networks - Airport weather stations</p>"},{"location":"educational/climate-data-guide/#2-epw-energyplus-weather-files","title":"2. EPW (EnergyPlus Weather) Files","text":"<p>Pros: - Comprehensive hourly data for entire years - Standardized format - Available for thousands of locations worldwide</p> <p>Cons: - May use interpolated or modeled data - Limited to specific locations - May not be updated annually</p> <p>Sources: - EnergyPlus Weather Data repository - Climate.OneBuilding.Org - EPW Map tool</p>"},{"location":"educational/climate-data-guide/#3-satellite-and-reanalysis-data","title":"3. Satellite and Reanalysis Data","text":"<p>Pros: - Global coverage - Consistent methodology - No gaps in spatial coverage</p> <p>Cons: - Lower accuracy than direct measurements - Coarser spatial resolution - May require processing before use</p> <p>Examples: - NASA POWER dataset - ERA5 reanalysis - CHIRPS precipitation data</p>"},{"location":"educational/climate-data-guide/#4-agricultural-weather-networks","title":"4. Agricultural Weather Networks","text":"<p>Pros: - Specifically designed for agricultural applications - Often include soil moisture and temperature - Typically well-maintained</p> <p>Cons: - Limited to agricultural regions - May require subscription or membership - Variable data quality standards</p> <p>Examples: - California Irrigation Management Information System (CIMIS) - CoAgMet (Colorado Agricultural Meteorological Network) - Various national and regional agricultural networks</p>"},{"location":"educational/climate-data-guide/#converting-between-data-formats","title":"Converting Between Data Formats","text":"<p>EVAPOTRAN supports multiple data input methods, but you may need to convert between formats:</p> <ol> <li>Unit conversions:</li> <li>Temperature: \u00b0F to \u00b0C: (\u00b0F - 32) \u00d7 5/9</li> <li>Wind speed: km/h to m/s: km/h \u00f7 3.6</li> <li> <p>Solar radiation: W/m\u00b2 to MJ/m\u00b2/day: W/m\u00b2 \u00d7 0.0864</p> </li> <li> <p>Estimating missing parameters:</p> </li> <li>Solar radiation from sunshine hours</li> <li>Humidity from dew point temperature</li> <li> <p>Wind speed adjustments for measurement height</p> </li> <li> <p>Temporal aggregation:</p> </li> <li>Converting hourly to daily data</li> <li>Calculating daily averages from min/max values</li> </ol> <p>By understanding these climate parameters and data sources, you can ensure more accurate evapotranspiration calculations and make better-informed water management decisions.</p>"},{"location":"educational/evapotranspiration-basics/","title":"Understanding Evapotranspiration","text":""},{"location":"educational/evapotranspiration-basics/#what-is-evapotranspiration","title":"What is Evapotranspiration?","text":"<p>Evapotranspiration (ET) is the combined process of water transfer from the Earth's surface to the atmosphere through:</p> <ul> <li>Evaporation: The direct conversion of water from liquid to vapor from soil, water bodies, and wet surfaces</li> <li>Transpiration: The process by which plants release water vapor through small pores (stomata) in their leaves</li> </ul> <p>Together, these processes form a critical component of the water cycle and play a significant role in agricultural water management.</p>"},{"location":"educational/evapotranspiration-basics/#why-is-evapotranspiration-important","title":"Why is Evapotranspiration Important?","text":"<p>Understanding evapotranspiration is essential for:</p> <ol> <li>Irrigation Management: Determining how much water crops need</li> <li>Water Resource Planning: Estimating water demands for agricultural regions</li> <li>Climate Studies: Understanding local and regional water cycles</li> <li>Environmental Assessment: Evaluating ecosystem health and function</li> <li>Drought Monitoring: Identifying water stress conditions</li> </ol>"},{"location":"educational/evapotranspiration-basics/#reference-evapotranspiration-et0","title":"Reference Evapotranspiration (ET\u2080)","text":"<p>Reference evapotranspiration (ET\u2080) represents the evapotranspiration rate from a reference surface, not short of water. This reference surface is a hypothetical grass reference crop with specific characteristics:</p> <ul> <li>Height of 0.12 m</li> <li>A fixed surface resistance of 70 s/m</li> <li>An albedo of 0.23</li> </ul> <p>ET\u2080 serves as a standard to which evapotranspiration from other surfaces can be related.</p>"},{"location":"educational/evapotranspiration-basics/#factors-affecting-evapotranspiration","title":"Factors Affecting Evapotranspiration","text":"<p>Several climate parameters influence the evapotranspiration process:</p>"},{"location":"educational/evapotranspiration-basics/#1-radiation","title":"1. Radiation","text":"<p>Solar radiation provides the energy needed for evaporation. Higher radiation levels generally lead to higher evapotranspiration rates.</p>"},{"location":"educational/evapotranspiration-basics/#2-temperature","title":"2. Temperature","text":"<p>Higher temperatures increase the capacity of air to hold water vapor, accelerating evapotranspiration.</p>"},{"location":"educational/evapotranspiration-basics/#3-humidity","title":"3. Humidity","text":"<p>The difference between saturation vapor pressure and actual vapor pressure (vapor pressure deficit) drives evapotranspiration. Lower humidity increases this deficit.</p>"},{"location":"educational/evapotranspiration-basics/#4-wind-speed","title":"4. Wind Speed","text":"<p>Wind removes saturated air from around plants and soil, replacing it with drier air that can accept more moisture.</p>"},{"location":"educational/evapotranspiration-basics/#5-plant-factors","title":"5. Plant Factors","text":"<p>Plant type, growth stage, and density affect transpiration rates through differences in: - Root depth - Leaf area - Stomatal behavior - Canopy resistance</p>"},{"location":"educational/evapotranspiration-basics/#measurement-vs-estimation","title":"Measurement vs. Estimation","text":"<p>Evapotranspiration can be:</p> <ol> <li>Directly Measured: Using lysimeters, eddy covariance systems, or soil water balance methods</li> <li>Estimated: Using mathematical models based on climate data</li> </ol> <p>The FAO Penman-Monteith method, implemented in EVAPOTRAN, is the internationally recognized standard for estimating ET\u2080.</p>"},{"location":"educational/evapotranspiration-basics/#from-et0-to-crop-evapotranspiration-etc","title":"From ET\u2080 to Crop Evapotranspiration (ETc)","text":"<p>To determine actual crop water requirements, ET\u2080 is multiplied by a crop coefficient (Kc):</p> \\[ET_c = K_c \\times ET_0\\] <p>Crop coefficients vary by: - Crop type - Growth stage - Climate conditions - Soil moisture</p>"},{"location":"educational/evapotranspiration-basics/#applications-in-agriculture","title":"Applications in Agriculture","text":"<p>Understanding evapotranspiration helps farmers and agricultural professionals:</p> <ol> <li>Schedule Irrigation: Determine when and how much to irrigate</li> <li>Select Crops: Choose crops suitable for local water availability</li> <li>Design Systems: Develop efficient irrigation systems</li> <li>Conserve Water: Minimize water waste while maintaining crop health</li> <li>Increase Yield: Optimize water application for maximum productivity</li> </ol> <p>By using EVAPOTRAN to calculate reference evapotranspiration, agricultural professionals can make more informed decisions about water management, leading to more sustainable and productive farming practices.</p>"},{"location":"faq/","title":"Frequently Asked Questions","text":"<p>This section answers common questions about EVAPOTRAN.</p>"},{"location":"faq/#contents","title":"Contents","text":"<ol> <li>General Questions - Basic information about EVAPOTRAN</li> <li>Calculation Questions - Questions about the calculation methods</li> <li>Data Questions - Questions about data handling and formats</li> <li>Technical Issues - Common technical problems</li> <li>Feature Requests - Information about requesting new features</li> </ol>"},{"location":"faq/general/","title":"General FAQ","text":""},{"location":"faq/general/#what-is-evapotran","title":"What is EVAPOTRAN?","text":"<p>EVAPOTRAN is a web-based calculator for determining reference evapotranspiration (ET\u2080) using the FAO Penman-Monteith method. It helps agricultural professionals optimize irrigation scheduling and water resource management.</p>"},{"location":"faq/general/#who-is-evapotran-for","title":"Who is EVAPOTRAN for?","text":"<p>EVAPOTRAN is designed for: - Agricultural engineers - Irrigation specialists - Farm managers - Researchers - Students in agricultural sciences - Anyone involved in precision agriculture and water management</p>"},{"location":"faq/general/#is-evapotran-free-to-use","title":"Is EVAPOTRAN free to use?","text":"<p>Yes, EVAPOTRAN is open-source software released under the GNU General Public License v3.0. You can use, modify, and distribute it freely according to the terms of the license.</p>"},{"location":"faq/general/#what-data-do-i-need-to-use-evapotran","title":"What data do I need to use EVAPOTRAN?","text":"<p>To calculate reference evapotranspiration, you'll need: - Temperature data (minimum and maximum) - Relative humidity or dew point temperature - Wind speed - Solar radiation or sunshine hours - Location information (latitude, longitude, elevation)</p>"},{"location":"faq/general/#can-i-use-evapotran-offline","title":"Can I use EVAPOTRAN offline?","text":"<p>Yes, EVAPOTRAN is a client-side web application that can be downloaded and run locally without an internet connection after the initial setup.</p>"},{"location":"getting-started/","title":"Getting Started with EVAPOTRAN","text":"<p>This section provides a quick introduction to EVAPOTRAN and helps you get up and running quickly.</p>"},{"location":"getting-started/#contents","title":"Contents","text":"<ol> <li>Introduction - What is EVAPOTRAN and why use it</li> <li>Installation - How to install and set up EVAPOTRAN</li> <li>Quick Start Guide - Your first calculations</li> <li>Key Concepts - Essential concepts to understand</li> </ol>"},{"location":"getting-started/introduction/","title":"Introduction to EVAPOTRAN","text":"<p>EVAPOTRAN is a comprehensive tool for calculating reference evapotranspiration (ET\u2080) using the FAO Penman-Monteith method. This guide will help you understand what EVAPOTRAN is and how it can benefit your agricultural water management practices.</p>"},{"location":"getting-started/introduction/#what-is-evapotranspiration","title":"What is Evapotranspiration?","text":"<p>Evapotranspiration (ET) is the combined process of water evaporation from soil and plant surfaces and transpiration from plants. Reference evapotranspiration (ET\u2080) represents the evapotranspiration rate from a reference surface, not short of water.</p>"},{"location":"getting-started/introduction/#why-evapotran","title":"Why EVAPOTRAN?","text":"<p>EVAPOTRAN provides:</p> <ul> <li>Accurate Calculations: Implements the full FAO Penman-Monteith equation</li> <li>Multiple Input Methods: Manual data entry, EPW file import, and live weather data</li> <li>Visualization Tools: Generate heatmaps and charts to analyze patterns</li> <li>User-Friendly Interface: Simple design for both beginners and experts</li> </ul>"},{"location":"getting-started/introduction/#key-features","title":"Key Features","text":"<ul> <li>Manual Calculator: Enter climate data directly to calculate reference evapotranspiration</li> <li>EPW Import: Upload EnergyPlus Weather files to extract climate data</li> <li>Weather Visualization: Generate heatmaps and visualize weather patterns</li> <li>Live Weather: Connect to real-time weather data for immediate calculations</li> </ul>"},{"location":"getting-started/introduction/#next-steps","title":"Next Steps","text":"<ul> <li>Installation - Set up EVAPOTRAN on your system</li> <li>Quick Start Guide - Make your first calculations</li> </ul>"},{"location":"img/","title":"Documentation Images","text":"<p>This directory contains images used in the EVAPOTRAN documentation.</p>"},{"location":"releases/","title":"Release Notes","text":"<p>This section contains detailed information about each EVAPOTRAN release, including new features, improvements, bug fixes, and known issues.</p>"},{"location":"releases/#latest-release","title":"Latest Release","text":""},{"location":"releases/#evapotran-021-2025-05-06","title":"EVAPOTRAN 0.2.1 (2025-05-06)","text":"<p>This release focuses on documentation improvements and adds ReadTheDocs integration for better user and developer experience.</p>"},{"location":"releases/#key-improvements","title":"Key Improvements","text":"<ul> <li>Enhanced Documentation Structure: Reorganized documentation with clear sections for users, developers, and technical reference</li> <li>ReadTheDocs Integration: Documentation now available at EVAPOTRAN_Doc.flaha.org with improved navigation and searchability</li> <li>Multiple Documentation Formats: Added support for web-based, PDF, and GitHub Wiki documentation</li> <li>Developer Documentation: Expanded release process documentation and contribution guidelines</li> <li>Improved Installation Guide: Clearer instructions for local and server deployment</li> </ul>"},{"location":"releases/#previous-releases","title":"Previous Releases","text":""},{"location":"releases/#evapotran-020-2025-04-15","title":"EVAPOTRAN 0.2.0 (2025-04-15)","text":"<p>Initial public release of EVAPOTRAN with core functionality.</p>"},{"location":"releases/#features","title":"Features","text":"<ul> <li>Manual ET\u2080 calculator with FAO Penman-Monteith implementation</li> <li>EPW weather file import and processing</li> <li>Weather data visualization with heatmaps</li> <li>Live weather data integration</li> </ul>"},{"location":"security/","title":"EVAPOTRAN Security Guide","text":"<p>This document outlines the security measures implemented in the EVAPOTRAN application.</p>"},{"location":"security/#server-security","title":"Server Security","text":""},{"location":"security/#firewall-configuration","title":"Firewall Configuration","text":"<p>The server uses UFW (Uncomplicated Firewall) to restrict incoming traffic: - Only ports 22 (SSH), 80 (HTTP), and 443 (HTTPS) are open - All other incoming traffic is blocked</p>"},{"location":"security/#fail2ban","title":"Fail2Ban","text":"<p>Fail2Ban is configured to protect against brute force attacks: - Monitors SSH login attempts - Bans IPs after 5 failed attempts for 1 hour</p>"},{"location":"security/#automatic-updates","title":"Automatic Updates","text":"<p>The server is configured for automatic security updates: - Daily package list updates - Automatic installation of security updates - Weekly system cleanup</p>"},{"location":"security/#application-security","title":"Application Security","text":""},{"location":"security/#authentication","title":"Authentication","text":"<ul> <li>JWT-based authentication with secure token generation</li> <li>Password hashing using bcrypt with salt rounds of 10</li> <li>Token expiration (1 day default, 30 days with \"Remember Me\")</li> <li>HTTP-only secure cookies for token storage</li> </ul>"},{"location":"security/#api-security","title":"API Security","text":"<ul> <li>Rate limiting to prevent abuse (100 requests per 15 minutes per IP)</li> <li>Input validation and sanitization</li> <li>Protection against NoSQL injection</li> <li>XSS protection</li> <li>Parameter pollution prevention</li> <li>CORS restrictions to allowed origins only</li> </ul>"},{"location":"security/#https-configuration","title":"HTTPS Configuration","text":"<ul> <li>TLS 1.2 and 1.3 only (older protocols disabled)</li> <li>Strong cipher suite configuration</li> <li>OCSP stapling enabled</li> <li>HTTP Strict Transport Security (HSTS)</li> <li>Secure cookie settings</li> </ul>"},{"location":"security/#frontend-security","title":"Frontend Security","text":"<ul> <li>Content Security Policy (CSP) to prevent XSS</li> <li>Subresource Integrity (SRI) for external resources</li> <li>X-Content-Type-Options to prevent MIME sniffing</li> <li>X-Frame-Options to prevent clickjacking</li> <li>Referrer Policy to control information in HTTP headers</li> </ul>"},{"location":"security/#security-monitoring","title":"Security Monitoring","text":"<ul> <li>Regular security audits using npm audit</li> <li>SSL configuration testing with SSL Labs</li> <li>Monitoring of unauthorized access attempts</li> <li>Disk usage monitoring</li> </ul>"},{"location":"security/#security-incident-response","title":"Security Incident Response","text":"<p>In case of a security incident:</p> <ol> <li>Isolate the affected system</li> <li>Assess the damage</li> <li>Identify the vulnerability</li> <li>Apply necessary patches</li> <li>Restore from clean backups if necessary</li> <li>Document the incident and response</li> <li>Implement measures to prevent similar incidents</li> </ol>"},{"location":"security/#reporting-security-issues","title":"Reporting Security Issues","text":"<p>If you discover a security vulnerability, please email security@flaha.org rather than using the public issue tracker.</p>"},{"location":"technical/","title":"Technical Reference","text":"<p>This section provides detailed technical information about the EVAPOTRAN implementation.</p>"},{"location":"technical/#contents","title":"Contents","text":"<ol> <li>Architecture - System architecture overview</li> <li>Calculation Methods - Detailed explanation of algorithms</li> <li>Data Processing - How data is processed and stored</li> <li>Visualization Engine - How data visualization works</li> <li>Performance Optimization - Performance considerations</li> <li>Browser Compatibility - Supported browsers and limitations</li> </ol>"},{"location":"technical/api-documentation/","title":"API Documentation","text":"<p>This document provides detailed information about the JavaScript functions and objects used in EVAPOTRAN.</p>"},{"location":"technical/api-documentation/#core-calculation-module-scriptjs","title":"Core Calculation Module (script.js)","text":""},{"location":"technical/api-documentation/#et0-calculation-functions","title":"ET\u2080 Calculation Functions","text":""},{"location":"technical/api-documentation/#calculateet0params","title":"<code>calculateET0(params)</code>","text":"<p>Calculates reference evapotranspiration using the FAO Penman-Monteith method.</p> <p>Parameters: - <code>params</code> (Object): An object containing the following properties:   - <code>tmin</code> (Number): Minimum daily temperature in \u00b0C   - <code>tmax</code> (Number): Maximum daily temperature in \u00b0C   - <code>rhmin</code> (Number): Minimum relative humidity in %   - <code>rhmax</code> (Number): Maximum relative humidity in %   - <code>u2</code> (Number): Wind speed at 2m height in m/s   - <code>n</code> (Number): Actual sunshine hours in hours   - <code>lat</code> (Number): Latitude in decimal degrees   - <code>elev</code> (Number): Elevation in meters   - <code>doy</code> (Number): Day of year (1-365)</p> <p>Returns: - (Object): An object containing:   - <code>et0</code> (Number): Reference evapotranspiration in mm/day   - <code>intermediateParams</code> (Object): All intermediate calculation parameters</p> <p>Example: <pre><code>const result = calculateET0({\n  tmin: 15.0,\n  tmax: 28.5,\n  rhmin: 45,\n  rhmax: 85,\n  u2: 2.1,\n  n: 8.5,\n  lat: 35.2,\n  elev: 210,\n  doy: 182\n});\n\nconsole.log(`ET\u2080: ${result.et0.toFixed(2)} mm/day`);\n</code></pre></p>"},{"location":"technical/api-documentation/#calculateradiationlat-doy-n-n","title":"<code>calculateRadiation(lat, doy, n, N)</code>","text":"<p>Calculates solar radiation parameters.</p> <p>Parameters: - <code>lat</code> (Number): Latitude in decimal degrees - <code>doy</code> (Number): Day of year (1-365) - <code>n</code> (Number): Actual sunshine hours - <code>N</code> (Number): Maximum possible sunshine hours</p> <p>Returns: - (Object): An object containing radiation parameters</p>"},{"location":"technical/api-documentation/#utility-functions","title":"Utility Functions","text":""},{"location":"technical/api-documentation/#saturationvaporpressuretemp","title":"<code>saturationVaporPressure(temp)</code>","text":"<p>Calculates saturation vapor pressure at a given temperature.</p> <p>Parameters: - <code>temp</code> (Number): Temperature in \u00b0C</p> <p>Returns: - (Number): Saturation vapor pressure in kPa</p>"},{"location":"technical/api-documentation/#slopevaporpressurecurvetemp","title":"<code>slopeVaporPressureCurve(temp)</code>","text":"<p>Calculates the slope of the saturation vapor pressure curve.</p> <p>Parameters: - <code>temp</code> (Number): Temperature in \u00b0C</p> <p>Returns: - (Number): Slope in kPa/\u00b0C</p>"},{"location":"technical/api-documentation/#epw-import-module-epw-importjs","title":"EPW Import Module (epw-import.js)","text":""},{"location":"technical/api-documentation/#parseepwfilefilecontent","title":"<code>parseEPWFile(fileContent)</code>","text":"<p>Parses an EPW file and extracts weather data.</p> <p>Parameters: - <code>fileContent</code> (String): The content of the EPW file as text</p> <p>Returns: - (Object): An object containing:   - <code>location</code> (Object): Location information   - <code>data</code> (Array): Hourly weather data for the entire year</p>"},{"location":"technical/api-documentation/#extractdailydataepwdata-dayofyear","title":"<code>extractDailyData(epwData, dayOfYear)</code>","text":"<p>Extracts daily averages from hourly EPW data.</p> <p>Parameters: - <code>epwData</code> (Array): Hourly weather data from EPW file - <code>dayOfYear</code> (Number): Day of year (1-365)</p> <p>Returns: - (Object): Daily average values for all weather parameters</p>"},{"location":"technical/api-documentation/#visualization-module-epw-heatmapjs","title":"Visualization Module (epw-heatmap.js)","text":""},{"location":"technical/api-documentation/#createheatmapcontainer-data-options","title":"<code>createHeatmap(container, data, options)</code>","text":"<p>Creates a heatmap visualization.</p> <p>Parameters: - <code>container</code> (String|Element): The container element or its ID - <code>data</code> (Array): 2D array of values to visualize - <code>options</code> (Object): Configuration options for the heatmap</p> <p>Returns: - (Object): The heatmap instance</p>"},{"location":"technical/api-documentation/#createtimeserieschartcontainer-data-options","title":"<code>createTimeSeriesChart(container, data, options)</code>","text":"<p>Creates a time series chart.</p> <p>Parameters: - <code>container</code> (String|Element): The container element or its ID - <code>data</code> (Object): Data series to plot - <code>options</code> (Object): Configuration options for the chart</p> <p>Returns: - (Object): The chart instance</p>"},{"location":"technical/api-documentation/#live-weather-module-live-weatherjs","title":"Live Weather Module (live-weather.js)","text":""},{"location":"technical/api-documentation/#fetchweatherdatalocation-apikey","title":"<code>fetchWeatherData(location, apiKey)</code>","text":"<p>Fetches current weather data from OpenWeatherMap API.</p> <p>Parameters: - <code>location</code> (String|Object): Location name or coordinates object - <code>apiKey</code> (String): OpenWeatherMap API key</p> <p>Returns: - (Promise): Resolves to weather data object</p>"},{"location":"technical/api-documentation/#weathertoet0paramsweatherdata","title":"<code>weatherToET0Params(weatherData)</code>","text":"<p>Converts weather API data to parameters needed for ET\u2080 calculation.</p> <p>Parameters: - <code>weatherData</code> (Object): Weather data from API</p> <p>Returns: - (Object): Parameters formatted for ET\u2080 calculation</p>"},{"location":"technical/architecture/","title":"Application Architecture","text":"<p>EVAPOTRAN follows a modular client-side architecture designed for performance and ease of maintenance.</p>"},{"location":"technical/architecture/#overview","title":"Overview","text":"<p>The application is built using vanilla JavaScript, HTML5, and CSS3, with no external frameworks or backend dependencies. This approach ensures:</p> <ul> <li>Fast loading times</li> <li>No installation requirements</li> <li>Cross-platform compatibility</li> <li>Easy deployment</li> </ul>"},{"location":"technical/architecture/#component-structure","title":"Component Structure","text":"<pre><code>EVAPOTRAN/\n\u2502\n\u251c\u2500\u2500 index.html           # Main landing page with navigation options\n\u251c\u2500\u2500 calculator.html      # Manual ET\u2080 calculator interface\n\u251c\u2500\u2500 epw-import.html      # EPW weather file import functionality\n\u251c\u2500\u2500 epw-heatmap.html     # Weather data visualization dashboard\n\u251c\u2500\u2500 live-weather.html    # Real-time weather data integration\n\u2502\n\u251c\u2500\u2500 css/\n\u2502   \u2514\u2500\u2500 style.css        # Unified stylesheet for consistent UI\n\u2502\n\u251c\u2500\u2500 js/\n\u2502   \u251c\u2500\u2500 script.js        # Core calculation engine\n\u2502   \u251c\u2500\u2500 epw-import.js    # EPW file parsing utilities\n\u2502   \u251c\u2500\u2500 epw-heatmap.js   # Data visualization components\n\u2502   \u2514\u2500\u2500 live-weather.js  # Weather API integration services\n\u2502\n\u2514\u2500\u2500 img/\n    \u2514\u2500\u2500 Flaha_logo.svg   # Vector logo for high-resolution displays\n</code></pre>"},{"location":"technical/architecture/#data-flow","title":"Data Flow","text":""},{"location":"technical/architecture/#input-methods","title":"Input Methods","text":"<p>EVAPOTRAN offers three methods for data input:</p> <ol> <li>Manual Input: Users directly enter climate parameters through form fields</li> <li>EPW File Import: Users upload EnergyPlus Weather (EPW) files containing hourly weather data</li> <li>Live Weather API: Application fetches current weather data from OpenWeatherMap API</li> </ol>"},{"location":"technical/architecture/#processing-pipeline","title":"Processing Pipeline","text":"<ol> <li>Data Collection: Climate data is gathered from one of the three input methods</li> <li>Data Validation: Input values are validated for range and completeness</li> <li>Parameter Calculation: Intermediate parameters are calculated (e.g., solar radiation, vapor pressure)</li> <li>ET\u2080 Calculation: The FAO Penman-Monteith equation is applied to calculate reference evapotranspiration</li> <li>Result Presentation: Results are displayed with detailed calculation sheets</li> </ol>"},{"location":"technical/architecture/#storage-strategy","title":"Storage Strategy","text":"<ul> <li>Session Storage: Stores temporary calculation results and user preferences</li> <li>Local Storage: Caches EPW file data to avoid repeated uploads</li> <li>No Server-Side Storage: All data processing happens client-side for privacy</li> </ul>"},{"location":"technical/architecture/#user-interface-design","title":"User Interface Design","text":"<p>The UI follows a consistent design pattern across all modules:</p> <ul> <li>Header: Logo, application title, and navigation menu</li> <li>Content Area: Input forms, calculation results, and visualizations</li> <li>Footer: Copyright information and additional links</li> </ul>"},{"location":"technical/architecture/#performance-considerations","title":"Performance Considerations","text":"<p>For handling large datasets and complex calculations, EVAPOTRAN implements:</p> <ul> <li>Asynchronous processing for EPW file parsing</li> <li>Optimized calculation algorithms</li> <li>Efficient data visualization techniques</li> </ul> <p>See Performance Optimization for more details.</p>"},{"location":"technical/calculation-methods/","title":"Calculation Methods","text":"<p>This page documents the mathematical methods and equations used in EVAPOTRAN to calculate reference evapotranspiration (ET\u2080).</p>"},{"location":"technical/calculation-methods/#fao-penman-monteith-equation","title":"FAO Penman-Monteith Equation","text":"<p>EVAPOTRAN implements the FAO Penman-Monteith equation as defined in FAO Irrigation and Drainage Paper No. 56:</p> \\[ET_0 = \\frac{0.408 \\Delta (R_n - G) + \\gamma \\frac{900}{T + 273} u_2 (e_s - e_a)}{\\Delta + \\gamma (1 + 0.34 u_2)}\\] <p>Where: - \\(ET_0\\) = reference evapotranspiration [mm day\u207b\u00b9] - \\(R_n\\) = net radiation at the crop surface [MJ m\u207b\u00b2 day\u207b\u00b9] - \\(G\\) = soil heat flux density [MJ m\u207b\u00b2 day\u207b\u00b9] - \\(T\\) = mean daily air temperature at 2 m height [\u00b0C] - \\(u_2\\) = wind speed at 2 m height [m s\u207b\u00b9] - \\(e_s\\) = saturation vapor pressure [kPa] - \\(e_a\\) = actual vapor pressure [kPa] - \\(\\Delta\\) = slope of vapor pressure curve [kPa \u00b0C\u207b\u00b9] - \\(\\gamma\\) = psychrometric constant [kPa \u00b0C\u207b\u00b9]</p>"},{"location":"technical/calculation-methods/#calculation-steps","title":"Calculation Steps","text":""},{"location":"technical/calculation-methods/#1-atmospheric-parameters","title":"1. Atmospheric Parameters","text":""},{"location":"technical/calculation-methods/#atmospheric-pressure","title":"Atmospheric Pressure","text":"<p>If not provided, atmospheric pressure is calculated from elevation:</p> \\[P = 101.3 \\left(\\frac{293 - 0.0065z}{293}\\right)^{5.26}\\] <p>Where: - \\(P\\) = atmospheric pressure [kPa] - \\(z\\) = elevation above sea level [m]</p>"},{"location":"technical/calculation-methods/#psychrometric-constant","title":"Psychrometric Constant","text":"\\[\\gamma = \\frac{c_p P}{\\varepsilon \\lambda} = 0.000665 P\\] <p>Where: - \\(\\gamma\\) = psychrometric constant [kPa \u00b0C\u207b\u00b9] - \\(P\\) = atmospheric pressure [kPa] - \\(c_p\\) = specific heat of air at constant pressure [MJ kg\u207b\u00b9 \u00b0C\u207b\u00b9] - \\(\\varepsilon\\) = ratio of molecular weight of water vapor to dry air [0.622] - \\(\\lambda\\) = latent heat of vaporization [MJ kg\u207b\u00b9]</p>"},{"location":"technical/calculation-methods/#2-humidity-parameters","title":"2. Humidity Parameters","text":""},{"location":"technical/calculation-methods/#saturation-vapor-pressure","title":"Saturation Vapor Pressure","text":"\\[e^o(T) = 0.6108 \\exp\\left(\\frac{17.27 T}{T + 237.3}\\right)\\] <p>Where: - \\(e^o(T)\\) = saturation vapor pressure at temperature T [kPa] - \\(T\\) = air temperature [\u00b0C]</p>"},{"location":"technical/calculation-methods/#actual-vapor-pressure","title":"Actual Vapor Pressure","text":"<p>From relative humidity:</p> \\[e_a = \\frac{RH}{100} \\times e_s\\] <p>Where: - \\(e_a\\) = actual vapor pressure [kPa] - \\(RH\\) = relative humidity [%] - \\(e_s\\) = saturation vapor pressure [kPa]</p>"},{"location":"technical/calculation-methods/#slope-of-saturation-vapor-pressure-curve","title":"Slope of Saturation Vapor Pressure Curve","text":"\\[\\Delta = \\frac{4098 \\times 0.6108 \\exp\\left(\\frac{17.27 T}{T + 237.3}\\right)}{(T + 237.3)^2}\\] <p>Where: - \\(\\Delta\\) = slope of saturation vapor pressure curve [kPa \u00b0C\u207b\u00b9] - \\(T\\) = air temperature [\u00b0C]</p>"},{"location":"technical/calculation-methods/#3-radiation-parameters","title":"3. Radiation Parameters","text":""},{"location":"technical/calculation-methods/#inverse-relative-distance-earth-sun","title":"Inverse Relative Distance Earth-Sun","text":"\\[d_r = 1 + 0.033 \\cos\\left(\\frac{2\\pi J}{365}\\right)\\] <p>Where: - \\(d_r\\) = inverse relative distance Earth-Sun - \\(J\\) = day of the year [1-365]</p>"},{"location":"technical/calculation-methods/#solar-declination","title":"Solar Declination","text":"\\[\\delta = 0.409 \\sin\\left(\\frac{2\\pi J}{365} - 1.39\\right)\\] <p>Where: - \\(\\delta\\) = solar declination [radians] - \\(J\\) = day of the year [1-365]</p>"},{"location":"technical/calculation-methods/#sunset-hour-angle","title":"Sunset Hour Angle","text":"\\[\\omega_s = \\arccos(-\\tan(\\phi) \\tan(\\delta))\\] <p>Where: - \\(\\omega_s\\) = sunset hour angle [radians] - \\(\\phi\\) = latitude [radians] - \\(\\delta\\) = solar declination [radians]</p>"},{"location":"technical/calculation-methods/#extraterrestrial-radiation","title":"Extraterrestrial Radiation","text":"\\[R_a = \\frac{24(60)}{\\pi} G_{sc} d_r [\\omega_s \\sin(\\phi) \\sin(\\delta) + \\cos(\\phi) \\cos(\\delta) \\sin(\\omega_s)]\\] <p>Where: - \\(R_a\\) = extraterrestrial radiation [MJ m\u207b\u00b2 day\u207b\u00b9] - \\(G_{sc}\\) = solar constant [0.0820 MJ m\u207b\u00b2 min\u207b\u00b9] - \\(d_r\\) = inverse relative distance Earth-Sun - \\(\\omega_s\\) = sunset hour angle [radians] - \\(\\phi\\) = latitude [radians] - \\(\\delta\\) = solar declination [radians]</p>"},{"location":"technical/calculation-methods/#daylight-hours","title":"Daylight Hours","text":"\\[N = \\frac{24}{\\pi} \\omega_s\\] <p>Where: - \\(N\\) = daylight hours [hours] - \\(\\omega_s\\) = sunset hour angle [radians]</p>"},{"location":"technical/calculation-methods/#solar-radiation","title":"Solar Radiation","text":"<p>If measured solar radiation is not available, it can be estimated from sunshine duration:</p> \\[R_s = \\left(a_s + b_s \\frac{n}{N}\\right) R_a\\] <p>Where: - \\(R_s\\) = solar radiation [MJ m\u207b\u00b2 day\u207b\u00b9] - \\(n\\) = actual sunshine duration [hours] - \\(N\\) = maximum possible sunshine duration [hours] - \\(R_a\\) = extraterrestrial radiation [MJ m\u207b\u00b2 day\u207b\u00b9] - \\(a_s\\) and \\(b_s\\) are regression constants (typically \\(a_s = 0.25\\) and \\(b_s = 0.50\\))</p>"},{"location":"technical/calculation-methods/#clear-sky-solar-radiation","title":"Clear-Sky Solar Radiation","text":"\\[R_{so} = (0.75 + 2 \\times 10^{-5} z) R_a\\] <p>Where: - \\(R_{so}\\) = clear-sky solar radiation [MJ m\u207b\u00b2 day\u207b\u00b9] - \\(z\\) = elevation above sea level [m] - \\(R_a\\) = extraterrestrial radiation [MJ m\u207b\u00b2 day\u207b\u00b9]</p>"},{"location":"technical/calculation-methods/#net-shortwave-radiation","title":"Net Shortwave Radiation","text":"\\[R_{ns} = (1 - \\alpha) R_s\\] <p>Where: - \\(R_{ns}\\) = net shortwave radiation [MJ m\u207b\u00b2 day\u207b\u00b9] - \\(\\alpha\\) = albedo (0.23 for the reference crop) - \\(R_s\\) = solar radiation [MJ m\u207b\u00b2 day\u207b\u00b9]</p>"},{"location":"technical/calculation-methods/#net-longwave-radiation","title":"Net Longwave Radiation","text":"<p>$$R_{nl} = \\sigma \\left[\\frac{T_{max,K}^4 + T_{min,K}^4}{2}\\right] \\</p>"},{"location":"technical/data-processing/","title":"Data Processing","text":"<p>This document explains how EVAPOTRAN processes climate data for evapotranspiration calculations.</p>"},{"location":"technical/data-processing/#data-input-methods","title":"Data Input Methods","text":""},{"location":"technical/data-processing/#manual-input","title":"Manual Input","text":"<p>When users enter data manually, the application:</p> <ol> <li>Validates all input fields for completeness and range constraints</li> <li>Converts units if necessary (e.g., temperature from \u00b0F to \u00b0C)</li> <li>Applies the calculation pipeline directly</li> </ol>"},{"location":"technical/data-processing/#epw-file-import","title":"EPW File Import","text":"<p>EPW (EnergyPlus Weather) files contain hourly weather data for an entire year. The processing pipeline:</p> <ol> <li>File Parsing: Reads the EPW file as text and splits into header and data sections</li> <li>Header Extraction: Extracts location metadata (latitude, longitude, elevation, etc.)</li> <li>Data Extraction: Processes hourly records for:</li> <li>Dry bulb temperature</li> <li>Relative humidity</li> <li>Wind speed</li> <li>Atmospheric pressure</li> <li>Solar radiation</li> <li>Data Aggregation: Calculates daily averages for use in ET\u2080 calculations</li> <li>Data Transfer: Allows users to select specific days for detailed analysis</li> </ol>"},{"location":"technical/data-processing/#live-weather-api","title":"Live Weather API","text":"<p>When fetching live weather data:</p> <ol> <li>API Request: Sends a request to OpenWeatherMap API with location parameters</li> <li>Response Parsing: Extracts relevant climate parameters from the JSON response</li> <li>Data Transformation: Converts API units to the units required for ET\u2080 calculation</li> <li>Data Validation: Checks for missing or invalid values and provides defaults if necessary</li> </ol>"},{"location":"technical/data-processing/#calculation-pipeline","title":"Calculation Pipeline","text":"<p>Regardless of the data source, all inputs go through the same calculation pipeline:</p> <ol> <li>Atmospheric Parameters:</li> <li>Calculate atmospheric pressure from elevation (if not provided)</li> <li> <p>Calculate psychrometric constant</p> </li> <li> <p>Radiation Parameters:</p> </li> <li>Calculate extraterrestrial radiation</li> <li>Calculate solar radiation</li> <li> <p>Calculate net radiation</p> </li> <li> <p>Vapor Pressure Parameters:</p> </li> <li>Calculate saturation vapor pressure</li> <li>Calculate actual vapor pressure</li> <li> <p>Calculate slope of vapor pressure curve</p> </li> <li> <p>ET\u2080 Calculation:</p> </li> <li>Apply the FAO Penman-Monteith equation</li> <li>Format and display results</li> </ol>"},{"location":"technical/data-processing/#data-visualization-processing","title":"Data Visualization Processing","text":"<p>For the weather visualization module:</p> <ol> <li>Data Aggregation: Calculates daily, monthly, or annual statistics</li> <li>Data Normalization: Scales values for consistent visualization</li> <li>Color Mapping: Assigns colors based on value ranges</li> <li>Rendering: Creates heatmaps, charts, and other visualizations</li> </ol>"},{"location":"technical/data-processing/#error-handling","title":"Error Handling","text":"<p>The application implements several error handling strategies:</p> <ol> <li>Input Validation: Prevents calculation with incomplete or invalid data</li> <li>Fallback Values: Provides reasonable defaults when optional parameters are missing</li> <li>Error Messages: Displays user-friendly error messages for common issues</li> <li>Data Correction: Automatically corrects out-of-range values when possible</li> </ol>"},{"location":"technical/data-processing/#performance-considerations","title":"Performance Considerations","text":"<p>For large datasets (particularly EPW files), the application:</p> <ol> <li>Uses asynchronous processing to prevent UI freezing</li> <li>Implements efficient parsing algorithms</li> <li>Caches processed data in localStorage to avoid repeated calculations</li> </ol>"},{"location":"technical/performance-optimization/","title":"Performance Optimization","text":"<p>This document outlines the performance optimization techniques implemented in EVAPOTRAN to ensure efficient operation in production environments.</p>"},{"location":"technical/performance-optimization/#server-side-optimizations","title":"Server-Side Optimizations","text":""},{"location":"technical/performance-optimization/#api-response-caching","title":"API Response Caching","text":"<p>EVAPOTRAN implements intelligent caching for weather API responses:</p> <ul> <li>Weather data is cached for 10 minutes to reduce external API calls</li> <li>Location-based cache keys ensure accurate data retrieval</li> <li>Cache hit/miss logging provides visibility into cache performance</li> </ul> <pre><code>// Example of the caching implementation\nconst weatherCache = new NodeCache({ stdTTL: 600 }); // 10-minute cache\nconst cachedData = weatherCache.get(cacheKey);\nif (cachedData) {\n  return cachedData;\n}\n</code></pre>"},{"location":"technical/performance-optimization/#rate-limiting","title":"Rate Limiting","text":"<p>To protect against abuse and ensure fair resource allocation:</p> <ul> <li>API endpoints are protected with rate limiting (100 requests per 15 minutes per IP)</li> <li>Custom error messages guide users when limits are reached</li> <li>Standard rate limit headers provide programmatic limit information</li> </ul>"},{"location":"technical/performance-optimization/#response-compression","title":"Response Compression","text":"<p>All server responses are compressed to reduce bandwidth usage:</p> <ul> <li>Uses the Express compression middleware</li> <li>Automatically compresses HTTP responses</li> <li>Significantly reduces data transfer for large responses</li> </ul>"},{"location":"technical/performance-optimization/#monitoring-and-logging","title":"Monitoring and Logging","text":"<p>Professional monitoring is implemented through:</p> <ul> <li>HTTP request logging using Morgan</li> <li>Dedicated access logs for auditing and troubleshooting</li> <li>Health check endpoint for monitoring system status</li> </ul>"},{"location":"technical/performance-optimization/#client-side-optimizations","title":"Client-Side Optimizations","text":""},{"location":"technical/performance-optimization/#web-worker-implementation","title":"Web Worker Implementation","text":"<p>Large file processing is optimized using Web Workers:</p> <ul> <li>EPW file parsing is offloaded to a background thread</li> <li>Chunked processing prevents UI freezing</li> <li>Progress reporting provides user feedback during processing</li> </ul> <pre><code>// Example of chunked processing in Web Worker\nasync function processDataInChunks(lines) {\n  const CHUNK_SIZE = 1000;\n  // Process data in manageable chunks\n  // Report progress to main thread\n}\n</code></pre>"},{"location":"technical/performance-optimization/#resource-loading","title":"Resource Loading","text":"<p>Resources are optimized for faster page loading:</p> <ul> <li>CSS and JavaScript files are minified</li> <li>Critical CSS is inlined for faster initial rendering</li> <li>Asynchronous script loading prevents render blocking</li> </ul>"},{"location":"technical/performance-optimization/#database-optimizations","title":"Database Optimizations","text":""},{"location":"technical/performance-optimization/#query-optimization","title":"Query Optimization","text":"<p>Database queries are optimized for performance:</p> <ul> <li>Indexed fields for frequently queried data</li> <li>Optimized query patterns to minimize database load</li> <li>Connection pooling for efficient resource utilization</li> </ul>"},{"location":"technical/performance-optimization/#deployment-considerations","title":"Deployment Considerations","text":""},{"location":"technical/performance-optimization/#server-configuration","title":"Server Configuration","text":"<p>The production server is configured for optimal performance:</p> <ul> <li>Nginx configured with proper caching headers</li> <li>PM2 process manager for Node.js application management</li> <li>Automatic restart on failure for high availability</li> </ul>"},{"location":"technical/performance-optimization/#monitoring","title":"Monitoring","text":"<p>Production monitoring includes:</p> <ul> <li>Server resource utilization tracking</li> <li>Error rate monitoring and alerting</li> <li>Response time tracking for performance regression detection</li> </ul>"},{"location":"technical/performance-optimization/#performance-testing","title":"Performance Testing","text":"<p>Regular performance testing ensures consistent performance:</p> <ul> <li>Load testing with simulated user traffic</li> <li>Stress testing to identify breaking points</li> <li>Performance regression testing for new features</li> </ul>"},{"location":"technical/performance-optimization/#future-optimizations","title":"Future Optimizations","text":"<p>Planned future optimizations include:</p> <ul> <li>Implementing a CDN for static assets</li> <li>Database sharding for horizontal scaling</li> <li>Microservices architecture for specific high-load components</li> </ul>"},{"location":"technical/visualization/","title":"Visualization Techniques","text":"<p>This document describes the visualization techniques used in EVAPOTRAN for displaying weather data and evapotranspiration results.</p>"},{"location":"technical/visualization/#visualization-components","title":"Visualization Components","text":"<p>EVAPOTRAN uses several visualization techniques:</p> <ol> <li>Heatmaps: Calendar-based visualizations showing data intensity across time periods</li> <li>Time Series Charts: Line charts showing how values change over time</li> <li>Comparison Charts: Bar and scatter plots for comparing different parameters</li> <li>Data Tables: Structured tabular representations of numerical data</li> </ol>"},{"location":"technical/visualization/#heatmap-implementation","title":"Heatmap Implementation","text":"<p>Heatmaps are implemented using D3.js:</p> <pre><code>function createHeatmap(data, parameter, containerId) {\n  const container = document.getElementById(containerId);\n  const colorScale = d3.scaleSequential()\n    .domain([d3.min(data, d =&gt; d[parameter]), d3.max(data, d =&gt; d[parameter])])\n    .interpolator(getColorInterpolator(parameter));\n\n  // Create SVG and add cells\n  // ...\n}\n</code></pre>"},{"location":"technical/visualization/#color-schemes","title":"Color Schemes","text":"<p>The visualization module uses carefully selected color schemes:</p> <ol> <li>Temperature: Red-blue diverging scale</li> <li>Humidity: Blue sequential scale</li> <li>Solar Radiation: Yellow-orange sequential scale</li> <li>Wind Speed: Green sequential scale</li> <li>ET\u2080: Purple sequential scale</li> </ol>"},{"location":"technical/visualization/#responsive-design","title":"Responsive Design","text":"<p>All visualizations are designed to be responsive:</p> <ol> <li>Flexible Layouts: Adapt to different screen sizes</li> <li>Mobile Optimization: Touch-friendly interaction on mobile devices</li> <li>Print Optimization: Special layouts for printed reports</li> </ol>"},{"location":"technical/visualization/#export-options","title":"Export Options","text":"<p>Users can export visualizations in various formats:</p> <ol> <li>PNG/JPEG: Raster image formats</li> <li>SVG: Vector format for high-quality printing</li> <li>CSV: Raw data export for further analysis</li> <li>PDF: Formatted reports with visualizations</li> </ol>"},{"location":"user-guide/","title":"EVAPOTRAN User Guide","text":"<p>This comprehensive guide explains how to use all features of the EVAPOTRAN application.</p>"},{"location":"user-guide/#contents","title":"Contents","text":"<ol> <li>User Interface Overview - Understanding the interface</li> <li>Manual Calculator - Using the manual ET\u2080 calculator</li> <li>EPW File Import - Working with EPW weather files</li> <li>Weather Visualization - Using the visualization tools</li> <li>Live Weather Integration - Working with real-time weather data</li> <li>Data Export - Exporting and saving your results</li> <li>Troubleshooting - Common issues and solutions</li> </ol>"},{"location":"user-guide/epw-import/","title":"EPW Import","text":"<p>The EPW Import feature allows you to upload EnergyPlus Weather (EPW) files to automatically extract climate data for your location.</p>"},{"location":"user-guide/epw-import/#what-are-epw-files","title":"What are EPW Files?","text":"<p>EPW (EnergyPlus Weather) files contain hourly weather data for an entire year for a specific location. These files include:</p> <ul> <li>Temperature</li> <li>Humidity</li> <li>Wind speed</li> <li>Solar radiation</li> <li>Precipitation</li> <li>And many other climate parameters</li> </ul> <p>EPW files are widely used in building energy simulation and are available for thousands of locations worldwide.</p>"},{"location":"user-guide/epw-import/#obtaining-epw-files","title":"Obtaining EPW Files","text":"<p>You can download EPW files from several sources:</p> <ol> <li>EnergyPlus Weather Data (official repository)</li> <li>Climate.OneBuilding.Org (comprehensive collection)</li> <li>EPW Map (interactive map interface)</li> </ol>"},{"location":"user-guide/epw-import/#uploading-an-epw-file","title":"Uploading an EPW File","text":"<ol> <li>From the EVAPOTRAN home page, click on \"EPW Import\"</li> <li>Click the \"Choose File\" button in the upload section</li> <li>Select an EPW file from your computer</li> <li>Click \"Upload and Process\"</li> </ol> <p>During processing, you'll see a loading indicator. Large files may take a few moments to process.</p>"},{"location":"user-guide/epw-import/#working-with-epw-data","title":"Working with EPW Data","text":"<p>After uploading, you'll see:</p> <ol> <li>Location Information: Details extracted from the EPW header</li> <li>Data Selection: Options to select specific days or months</li> <li>Calculation Options: Parameters for ET\u2080 calculation</li> </ol>"},{"location":"user-guide/epw-import/#selecting-a-specific-day","title":"Selecting a Specific Day","text":"<ol> <li>Use the date picker or calendar interface to select a day</li> <li>Climate data for that day will be automatically populated</li> <li>Click \"Calculate ET\u2080\" to perform the calculation</li> </ol>"},{"location":"user-guide/epw-import/#generating-annual-reports","title":"Generating Annual Reports","text":"<ol> <li>Click the \"Generate Annual Report\" button</li> <li>Select the parameters you want to include</li> <li>The application will calculate ET\u2080 for each day of the year</li> <li>View the results as a table or download as CSV</li> </ol>"},{"location":"user-guide/epw-import/#visualizing-epw-data","title":"Visualizing EPW Data","text":"<p>After uploading an EPW file, you can:</p> <ol> <li>Click \"View Weather Heatmaps\" to see visual representations of the data</li> <li>Select different parameters (temperature, humidity, etc.) from the dropdown</li> <li>Toggle between daily, monthly, or hourly views</li> <li>Export visualizations as images</li> </ol>"},{"location":"user-guide/epw-import/#saving-epw-data","title":"Saving EPW Data","text":"<p>The application automatically saves your uploaded EPW data in your browser's local storage. This means:</p> <ol> <li>You don't need to re-upload the same file when you return</li> <li>You can switch between different sections of the application without losing data</li> <li>Data persists until you clear your browser cache or upload a new file</li> </ol>"},{"location":"user-guide/epw-import/#troubleshooting-epw-imports","title":"Troubleshooting EPW Imports","text":"<p>If you encounter issues with EPW imports:</p> <ol> <li>File Format Errors: Ensure your EPW file follows the standard format</li> <li>Large File Issues: Try using a smaller EPW file if processing takes too long</li> <li>Missing Data: Some EPW files may have gaps in certain parameters</li> </ol>"},{"location":"user-guide/getting-started/","title":"Getting Started with EVAPOTRAN","text":"<p>This guide will help you get started with the EVAPOTRAN calculator, a comprehensive tool for calculating reference evapotranspiration using the FAO Penman-Monteith method.</p>"},{"location":"user-guide/getting-started/#what-is-evapotranspiration","title":"What is Evapotranspiration?","text":"<p>Evapotranspiration (ET) is the combined process of water evaporation from soil and plant surfaces and transpiration from plants. Reference evapotranspiration (ET\u2080) represents the evapotranspiration rate from a reference surface, not short of water.</p>"},{"location":"user-guide/getting-started/#accessing-evapotran","title":"Accessing EVAPOTRAN","text":"<p>EVAPOTRAN is a web-based application that runs in your browser. You can access it by:</p> <ol> <li>Opening the <code>index.html</code> file in your web browser</li> <li>Navigating to the hosted version at https://flaha.org/evapotran (if available)</li> </ol>"},{"location":"user-guide/getting-started/#navigation","title":"Navigation","text":"<p>The EVAPOTRAN application consists of several modules:</p> <ol> <li>Home: The landing page with an overview and navigation options</li> <li>Manual Calculator: Enter climate data manually to calculate ET\u2080</li> <li>EPW Import: Upload EnergyPlus Weather files to extract climate data</li> <li>Weather Visualization: Generate heatmaps and visualize weather patterns</li> <li>Live Weather: Connect to real-time weather data for immediate calculations</li> </ol>"},{"location":"user-guide/getting-started/#data-input-methods","title":"Data Input Methods","text":"<p>EVAPOTRAN offers three methods for data input:</p>"},{"location":"user-guide/getting-started/#1-manual-input","title":"1. Manual Input","text":"<p>Enter climate parameters directly through form fields: - Temperature - Wind speed - Relative humidity - Elevation - Latitude - Day of year - Sunshine duration</p>"},{"location":"user-guide/getting-started/#2-epw-file-import","title":"2. EPW File Import","text":"<p>Upload EnergyPlus Weather (EPW) files containing hourly weather data: 1. Click on \"EPW Import\" in the navigation menu 2. Click \"Choose File\" and select an EPW file from your computer 3. Click \"Upload and Process\" to extract the climate data</p>"},{"location":"user-guide/getting-started/#3-live-weather-api","title":"3. Live Weather API","text":"<p>Fetch current weather data for a specific location: 1. Click on \"Live Weather\" in the navigation menu 2. Enter a location (city name or coordinates) 3. Click \"Fetch Weather Data\" to retrieve current conditions</p>"},{"location":"user-guide/getting-started/#next-steps","title":"Next Steps","text":"<ul> <li>Learn how to use the Manual Calculator</li> <li>Understand how to import EPW files</li> <li>Explore weather visualization features</li> <li>Try the live weather integration</li> </ul>"},{"location":"user-guide/installation/","title":"Installation Guide","text":"<p>EVAPOTRAN is a client-side web application that can be run locally or deployed to a web server.</p>"},{"location":"user-guide/installation/#local-installation","title":"Local Installation","text":"<ol> <li> <p>Clone or download the repository <pre><code>git clone https://github.com/flaha-agritech/evapotran.git\ncd evapotran\n</code></pre></p> </li> <li> <p>Open in a web browser</p> </li> <li>Navigate to the EVAPOTRAN directory</li> <li>Open <code>index.html</code> in any modern web browser</li> </ol>"},{"location":"user-guide/installation/#server-deployment","title":"Server Deployment","text":"<ol> <li>Upload files to your web server</li> <li>Upload all files in the EVAPOTRAN directory to your web server</li> <li> <p>Ensure the directory structure is maintained</p> </li> <li> <p>Access the application</p> </li> <li>Navigate to the URL where you deployed the application</li> <li>Example: <code>https://your-domain.com/evapotran/</code></li> </ol>"},{"location":"user-guide/installation/#requirements","title":"Requirements","text":"<ul> <li>Modern web browser (Chrome, Firefox, Safari, Edge)</li> <li>JavaScript enabled</li> <li>Internet connection (for Live Weather feature only)</li> </ul> <p>No additional dependencies or server-side components are required.</p>"},{"location":"user-guide/live-weather/","title":"Live Weather","text":"<p>The Live Weather module allows you to fetch current weather data from online sources and calculate real-time evapotranspiration.</p>"},{"location":"user-guide/live-weather/#accessing-live-weather","title":"Accessing Live Weather","text":"<p>From the EVAPOTRAN home page, click on the \"Live Weather\" option or navigate directly to <code>live-weather.html</code>.</p>"},{"location":"user-guide/live-weather/#setting-up-weather-api","title":"Setting Up Weather API","text":"<p>The Live Weather feature uses the OpenWeatherMap API to fetch current weather data. To use this feature:</p> <ol> <li>Get an API Key:</li> <li>Register for a free account at OpenWeatherMap</li> <li> <p>Navigate to your account page and copy your API key</p> </li> <li> <p>Enter API Key:</p> </li> <li>In the Live Weather page, click \"Settings\"</li> <li>Paste your API key in the designated field</li> <li>Click \"Save Settings\"</li> </ol> <p>Your API key will be saved in your browser's local storage for future use.</p>"},{"location":"user-guide/live-weather/#fetching-weather-data","title":"Fetching Weather Data","text":""},{"location":"user-guide/live-weather/#by-location-name","title":"By Location Name","text":"<ol> <li>Enter a city name in the search field (e.g., \"Paris, France\")</li> <li>Click \"Get Weather Data\"</li> <li>The application will fetch current weather conditions</li> </ol>"},{"location":"user-guide/live-weather/#by-coordinates","title":"By Coordinates","text":"<ol> <li>Click \"Use My Location\" to use your device's GPS</li> <li>Alternatively, enter latitude and longitude manually</li> <li>Click \"Get Weather Data\"</li> </ol>"},{"location":"user-guide/live-weather/#by-weather-station-id","title":"By Weather Station ID","text":"<p>For more precise data:</p> <ol> <li>Click \"Advanced Options\"</li> <li>Enter a specific weather station ID</li> <li>Click \"Get Weather Data\"</li> </ol>"},{"location":"user-guide/live-weather/#understanding-weather-data","title":"Understanding Weather Data","text":"<p>After fetching data, you'll see:</p> <ol> <li>Current Conditions: Temperature, humidity, wind speed, etc.</li> <li>Location Details: Coordinates, elevation, timezone</li> <li>Data Source: Weather station information and data timestamp</li> </ol>"},{"location":"user-guide/live-weather/#calculating-real-time-et0","title":"Calculating Real-Time ET\u2080","text":"<ol> <li>Review the fetched weather parameters</li> <li>Adjust any parameters if needed (e.g., if you have more accurate local measurements)</li> <li>Click \"Calculate ET\u2080\"</li> <li>View the calculated reference evapotranspiration</li> </ol>"},{"location":"user-guide/live-weather/#data-limitations","title":"Data Limitations","text":"<p>When using live weather data, be aware of these limitations:</p> <ol> <li>Data Resolution: Most weather APIs provide current conditions, not hourly averages</li> <li>Missing Parameters: Some parameters required for ET\u2080 calculation might be estimated</li> <li>Update Frequency: Free API tiers may have limited update frequency</li> <li>Geographic Precision: Data may come from weather stations some distance from your exact location</li> </ol>"},{"location":"user-guide/live-weather/#saving-and-tracking-data","title":"Saving and Tracking Data","text":"<p>The Live Weather module allows you to:</p> <ol> <li>Save Calculations: Store results for specific locations</li> <li>Track Changes: Monitor ET\u2080 changes throughout the day</li> <li>Export Data: Download current conditions and calculations</li> </ol>"},{"location":"user-guide/live-weather/#offline-use","title":"Offline Use","text":"<p>If you lose internet connection:</p> <ol> <li>The application will notify you of connection issues</li> <li>You can still use previously cached weather data</li> <li>Manual calculator remains available for offline use</li> </ol>"},{"location":"user-guide/manual-calculator/","title":"Manual Calculator","text":"<p>The Manual Calculator allows you to calculate reference evapotranspiration (ET\u2080) by entering climate data directly.</p>"},{"location":"user-guide/manual-calculator/#accessing-the-calculator","title":"Accessing the Calculator","text":"<ol> <li>From the EVAPOTRAN home page, click on the \"Manual Calculator\" option</li> <li>Alternatively, navigate directly to <code>calculator.html</code> in your browser</li> </ol>"},{"location":"user-guide/manual-calculator/#input-parameters","title":"Input Parameters","text":"<p>The calculator requires the following input parameters:</p>"},{"location":"user-guide/manual-calculator/#location-information","title":"Location Information","text":"Parameter Description Units Example Latitude Site latitude (positive for Northern hemisphere) degrees 35.2 Elevation Height above sea level meters 210 Day of Year Day number (1-365) - 182"},{"location":"user-guide/manual-calculator/#climate-data","title":"Climate Data","text":"Parameter Description Units Example Min Temperature Minimum daily temperature \u00b0C 15.0 Max Temperature Maximum daily temperature \u00b0C 28.5 Wind Speed Average wind speed at 2m height m/s 2.1 Relative Humidity Average relative humidity % 65 Sunshine Hours Hours of bright sunshine hours 8.5"},{"location":"user-guide/manual-calculator/#calculation-process","title":"Calculation Process","text":"<ol> <li>Enter all required parameters in the form</li> <li>Click the \"Calculate ET\u2080\" button</li> <li>Review the results displayed in the results section</li> </ol>"},{"location":"user-guide/manual-calculator/#understanding-the-results","title":"Understanding the Results","text":"<p>The calculator provides:</p> <ol> <li>Reference ET\u2080 Value: The daily reference evapotranspiration in mm/day</li> <li>Detailed Calculation Sheet: A breakdown of all intermediate parameters:</li> <li>Net radiation</li> <li>Soil heat flux</li> <li>Saturation vapor pressure</li> <li>Actual vapor pressure</li> <li>Vapor pressure deficit</li> <li>Slope of vapor pressure curve</li> <li>Psychrometric constant</li> </ol>"},{"location":"user-guide/manual-calculator/#tips-for-accurate-calculations","title":"Tips for Accurate Calculations","text":"<ul> <li>Use daily average values for best results</li> <li>Ensure wind speed measurements are at 2m height (or use the conversion tool)</li> <li>For sunshine hours, use actual measurements rather than estimates when possible</li> <li>When relative humidity data is unavailable, use the dew point temperature option</li> </ul>"},{"location":"user-guide/manual-calculator/#example-calculation","title":"Example Calculation","text":"<p>Here's an example calculation for a location in the Mediterranean region during summer:</p> <ul> <li>Latitude: 37.5\u00b0 N</li> <li>Elevation: 150 m</li> <li>Day of Year: 195 (July 14)</li> <li>Min Temperature: 18\u00b0C</li> <li>Max Temperature: 32\u00b0C</li> <li>Wind Speed: 2.5 m/s</li> <li>Relative Humidity: 55%</li> <li>Sunshine Hours: 10.2 hours</li> </ul> <p>Expected result: ET\u2080 \u2248 6.8 mm/day</p>"},{"location":"user-guide/manual-calculator/#saving-and-exporting-results","title":"Saving and Exporting Results","text":"<p>You can save your calculation results by:</p> <ol> <li>Using the \"Save Results\" button to store data in your browser</li> <li>Using the \"Export to CSV\" option to download results as a spreadsheet</li> <li>Using the \"Print Results\" option to create a PDF report</li> </ol>"},{"location":"user-guide/overview/","title":"User Guide Overview","text":"<p>This section provides detailed instructions for using all features of the EVAPOTRAN application.</p>"},{"location":"user-guide/overview/#available-guides","title":"Available Guides","text":"<ul> <li>Manual Calculator - How to use the manual input calculator</li> <li>EPW Import - Working with EnergyPlus Weather files</li> <li>Weather Visualization - Creating and interpreting data visualizations</li> <li>Live Weather - Connecting to real-time weather data</li> <li>Troubleshooting - Solutions to common issues</li> </ul>"},{"location":"user-guide/weather-visualization/","title":"Weather Visualization","text":"<p>The Weather Visualization module allows you to generate visual representations of climate data and evapotranspiration results.</p>"},{"location":"user-guide/weather-visualization/#accessing-weather-visualization","title":"Accessing Weather Visualization","text":"<p>There are two ways to access the visualization tools:</p> <ol> <li>From the EVAPOTRAN home page, click on \"Weather Visualization\"</li> <li>After uploading an EPW file, click \"View Weather Heatmaps\"</li> </ol>"},{"location":"user-guide/weather-visualization/#available-visualization-types","title":"Available Visualization Types","text":""},{"location":"user-guide/weather-visualization/#1-heatmaps","title":"1. Heatmaps","text":"<p>Heatmaps display data using color intensity across a grid, typically showing:</p> <ul> <li>Daily values across months (12\u00d731 grid)</li> <li>Hourly values across days (24\u00d731 grid)</li> <li>Monthly averages across years (for multi-year datasets)</li> </ul> <p>Available heatmap parameters include: - Temperature (min, max, average) - Relative humidity - Solar radiation - Wind speed - Calculated ET\u2080</p>"},{"location":"user-guide/weather-visualization/#2-time-series-charts","title":"2. Time Series Charts","text":"<p>Time series charts show how values change over time:</p> <ul> <li>Daily values for a selected month</li> <li>Monthly averages for a year</li> <li>Hourly values for a selected day</li> </ul>"},{"location":"user-guide/weather-visualization/#3-comparison-charts","title":"3. Comparison Charts","text":"<p>Compare different parameters or time periods:</p> <ul> <li>ET\u2080 vs. temperature</li> <li>ET\u2080 vs. solar radiation</li> <li>Current year vs. historical averages</li> </ul>"},{"location":"user-guide/weather-visualization/#creating-visualizations","title":"Creating Visualizations","text":""},{"location":"user-guide/weather-visualization/#generating-a-heatmap","title":"Generating a Heatmap","text":"<ol> <li>Select \"Heatmap\" from the visualization type dropdown</li> <li>Choose the parameter you want to visualize</li> <li>Select the time scale (hourly, daily, monthly)</li> <li>Click \"Generate Visualization\"</li> <li>Adjust color scale and display options as needed</li> </ol>"},{"location":"user-guide/weather-visualization/#creating-time-series-charts","title":"Creating Time Series Charts","text":"<ol> <li>Select \"Time Series\" from the visualization type dropdown</li> <li>Choose the parameter(s) you want to plot</li> <li>Select the time period</li> <li>Click \"Generate Chart\"</li> <li>Use the toolbar to zoom, pan, or export the chart</li> </ol>"},{"location":"user-guide/weather-visualization/#customizing-visualizations","title":"Customizing Visualizations","text":"<p>You can customize your visualizations with these options:</p> <ul> <li>Color Schemes: Choose from predefined color palettes or create custom schemes</li> <li>Scale Range: Set minimum and maximum values for the color scale</li> <li>Labels: Add custom titles, axis labels, and annotations</li> <li>Grid Lines: Toggle grid lines on/off and adjust their appearance</li> <li>Legend Position: Move the legend to different positions on the chart</li> </ul>"},{"location":"user-guide/weather-visualization/#exporting-visualizations","title":"Exporting Visualizations","text":"<p>Export your visualizations in various formats:</p> <ol> <li>Image Formats: PNG, JPG, SVG</li> <li>Data Export: CSV, JSON</li> <li>Print-Ready PDF: Generate a report with visualizations and metadata</li> </ol>"},{"location":"user-guide/weather-visualization/#interpreting-visualizations","title":"Interpreting Visualizations","text":""},{"location":"user-guide/weather-visualization/#reading-heatmaps","title":"Reading Heatmaps","text":"<ul> <li>Color Intensity: Darker colors typically represent higher values</li> <li>Patterns: Look for seasonal patterns, daily cycles, and anomalies</li> <li>Gradients: Observe how values transition between time periods</li> </ul>"},{"location":"user-guide/weather-visualization/#understanding-et0-patterns","title":"Understanding ET\u2080 Patterns","text":"<p>Typical patterns you might observe: - Higher ET\u2080 during summer months - Peak ET\u2080 during midday hours - Correlation between ET\u2080 and solar radiation - Inverse relationship between ET\u2080 and humidity</p>"}]}